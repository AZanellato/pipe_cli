!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
Adapter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^        struct Adapter<'ser, W: 'ser, F: 'ser> {$/;"	s
Addrs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/dns.rs	/^    type Addrs = vec::IntoIter<IpAddr>;$/;"	T
Alignment	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^pub enum Alignment {$/;"	g
ArrayInPlaceVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
Attr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^struct Attr<'c, T> {$/;"	s
BB	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const BB: u8 = b'b'; \/\/ \\x08$/;"	c
BS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    const BS: bool = true; \/\/ backslash \\x5C$/;"	c
BS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const BS: u8 = b'\\\\'; \/\/ \\x5C$/;"	c
Background	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/dns.rs	/^type Background = Box<dyn Future<Item=(), Error=()> + Send>;$/;"	T
Batching	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Batching<I, F> {$/;"	s
BinaryBytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/format.rs	/^pub struct BinaryBytes(pub u64);$/;"	s
Body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^pub struct Body {$/;"	s
Body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^pub struct Body {$/;"	s
BoolAttr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^struct BoolAttr<'c>(Attr<'c, ()>);$/;"	s
BoolVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
BorrowedBytesDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedCowStrDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct BorrowedCowStrDeserializer<'de> {$/;"	s
BorrowedLifetimes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^enum BorrowedLifetimes {$/;"	g
BorrowedLifetimes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    struct BorrowedLifetimes(Punctuated<syn::Lifetime, Token![+]>);$/;"	s
BorrowedRawDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^pub struct BorrowedRawDeserializer<'de> {$/;"	s
BorrowedStrDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BoundVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s
BoxedFromString	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^pub struct BoxedFromString;$/;"	s
BoxedVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^        struct BoxedVisitor;$/;"	s
Buffer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^            type Buffer = [Option<$A>; $N - 1];$/;"	T
Buffer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;$/;"	T
BytesDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
CStringVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CT	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    const CT: bool = true; \/\/ control character \\x00...\\x1F$/;"	c
Card	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub struct Card {$/;"	s
CardNode	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub struct CardNode {$/;"	s
Category	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^pub enum Category {$/;"	g
Cert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^enum Cert {$/;"	g
Certificate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^pub struct Certificate {$/;"	s
Chain	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^        struct Chain<T>(Option<T>);$/;"	s
CharEscape	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub enum CharEscape {$/;"	g
CharVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct CharVisitor;$/;"	s
Checkboxes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^pub struct Checkboxes<'a> {$/;"	s
CheckedStringRead	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/confy-0.3.1/src/utils.rs	/^pub trait CheckedStringRead {$/;"	t
Chunk	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub struct Chunk<'a, I: 'a>$/;"	s
Chunk	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^pub struct Chunk {$/;"	s
ChunkIndex	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^struct ChunkIndex {$/;"	s
Chunks	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub struct Chunks<'a, I: 'a>$/;"	s
CliResult	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/quicli-0.4.0/src/lib.rs	/^    pub type CliResult = ::std::result::Result<(), ::exitfailure::ExitFailure>;$/;"	T
Client	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^pub struct Client {$/;"	s
Client	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^pub struct Client {$/;"	s
ClientBuilder	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^pub struct ClientBuilder {$/;"	s
ClientBuilder	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^pub struct ClientBuilder {$/;"	s
ClientCert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^enum ClientCert {$/;"	g
ClientHandle	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^struct ClientHandle {$/;"	s
ClientRef	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^struct ClientRef {$/;"	s
Coalesce	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Coalesce<I, F>$/;"	s
CoalesceCore	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct CoalesceCore<I>$/;"	s
ColorfulTheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^pub struct ColorfulTheme {$/;"	s
Colors	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^pub struct Colors {$/;"	s
Combination	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^            type Combination = $C<Fuse<I>>;$/;"	T
Combination	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Combination = Tuple1Combination<I>;$/;"	T
Combination	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Combination: From<I> + Iterator<Item = Self>;$/;"	T
Combinations	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^pub struct Combinations<I: Iterator> {$/;"	s
CompactFormatter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub struct CompactFormatter;$/;"	s
Compound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub enum Compound<'a, W: 'a, F: 'a> {$/;"	g
Config	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^struct Config {$/;"	s
Confirmation	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^pub struct Confirmation<'a> {$/;"	s
ConnectAsync	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    pub struct ConnectAsync<S> {$/;"	s
ConsTuples	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^pub struct ConsTuples<I, J>$/;"	s
Container	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^pub struct Container<'a> {$/;"	s
Container	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub struct Container {$/;"	s
Content	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g
Content	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub enum Content {$/;"	g
ContentDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s
ContentRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s
ContentSerializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s
ContentVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s
Cookie	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^pub struct Cookie<'a>(cookie::Cookie<'a>);$/;"	s
CookieParseError	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^pub struct CookieParseError(cookie::ParseError);$/;"	s
CowBytesVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s
CowStrDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s
Ctxt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ctxt.rs	/^pub struct Ctxt {$/;"	s
Custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^struct Custom {$/;"	s
CustomPromptCharacterTheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^pub struct CustomPromptCharacterTheme {$/;"	s
DEFAULT_GUTTER_COLOR	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^const DEFAULT_GUTTER_COLOR: u8 = 238;$/;"	c
DEFAULT_USER_AGENT	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^static DEFAULT_USER_AGENT: &'static str =$/;"	c
Data	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^pub enum Data<'a> {$/;"	g
DeImplGenerics	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^struct DeImplGenerics<'a>(&'a Parameters);$/;"	s
DeTypeGenerics	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^struct DeTypeGenerics<'a>(&'a Parameters);$/;"	s
DebugLength	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^struct DebugLength<'a>(&'a Option<u64>);$/;"	s
DecimalBytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/format.rs	/^pub struct DecimalBytes(pub u64);$/;"	s
Decoder	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^pub struct Decoder {$/;"	s
Decoration	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^pub trait Decoration {$/;"	t
DecorationText	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^pub struct DecorationText {$/;"	s
Dedup	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Dedup<I>$/;"	s
Default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub enum Default {$/;"	g
Derive	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/mod.rs	/^pub enum Derive {$/;"	g
Deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	t
Deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        trait Deserialize<'de>: Sized {$/;"	t
DeserializeOwned	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	t
DeserializeSeed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	t
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	t
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^            type Deserializer = $name<E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Deserializer = Self;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    type Deserializer = <u32 as IntoDeserializer<'de, E>>::Deserializer;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^pub struct Deserializer<R> {$/;"	s
Diff	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs	/^pub enum Diff<I, J>$/;"	g
DurationVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s
ESCAPE	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^static ESCAPE: [bool; 256] = {$/;"	c
ESCAPE	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^static ESCAPE: [u8; 256] = [$/;"	c
Editor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^pub struct Editor {$/;"	s
Either	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^pub enum Either<L, R> {$/;"	g
EitherOrBoth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs	/^pub enum EitherOrBoth<A, B> {$/;"	g
Encode	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^pub struct Encode {$/;"	s
Entry	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub enum Entry<'a> {$/;"	g
EnumAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	t
EnumDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s
EnumDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct EnumDeserializer {$/;"	s
EnumRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s
EnumRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct EnumRefDeserializer<'de> {$/;"	s
EnumVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        struct EnumVisitor;$/;"	s
ErasedResolver	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/dns.rs	/^type ErasedResolver = Box<dyn Fn(hyper_dns::Name) -> BackgroundLookupIp + Send + Sync>;$/;"	T
Err	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/validate.rs	/^    type Err = E;$/;"	T
Err	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/validate.rs	/^    type Err: Debug + Display;$/;"	T
Err	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^    type Err = Error;$/;"	T
Err	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/case.rs	/^    type Err = ();$/;"	T
Err	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    type Err = Error;$/;"	T
Err	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    type Err = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    type Error = ::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    type Error = ::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    type Error = error::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    type Error = ::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        type Error = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    type Error = io::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    type Error = <async_impl::Decoder as Stream>::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    type Error = A::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    type Error: Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^            type Error = E;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        type Error = A::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        type Error = E;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Error = A::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Error = E;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Error = E;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    type Error = E;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type Error = E;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type Error = M::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type Error = M::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type Error = S::Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^pub struct Error;$/;"	s
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    type Error = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type Error: Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    type Error = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    type Error = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    type Error = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type Error = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    type Error = Error;$/;"	T
Error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type Error = Error;$/;"	T
ErrorCode	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^pub enum ErrorCode {$/;"	g
ErrorImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^type ErrorImpl = ();$/;"	T
ErrorImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	T
ErrorImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^struct ErrorImpl {$/;"	s
Estimate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^pub struct Estimate {$/;"	s
Expected	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait Expected {$/;"	t
ExpectedInMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
Expr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^pub struct Expr(pub Fragment);$/;"	s
FF	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const FF: u8 = b'f'; \/\/ \\x0C$/;"	c
FIELDS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	c
FIELDS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	c
FIELDS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	c
FIELDS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#field_names),* ];$/;"	c
FIELDS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
FIELDS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        const FIELDS: &'static [&'static str] = &[#tag, #content];$/;"	c
Field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        enum Field {$/;"	g
Field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    enum Field {$/;"	g
Field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^pub struct Field<'a> {$/;"	s
Field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub struct Field {$/;"	s
FieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s
FieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s
FieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^        struct FieldVisitor;$/;"	s
FieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^        struct FieldVisitor;$/;"	s
FindTyParams	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^    struct FindTyParams<'ast> {$/;"	s
First	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        type First = A;$/;"	T
First	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        type First;$/;"	T
First	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	T
FlatInternallyTaggedAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
FoldWhile	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^pub enum FoldWhile<T> {$/;"	g
Form	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^pub struct Form {$/;"	s
Form	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^pub struct Form {$/;"	s
Format	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^pub struct Format<'a, I> {$/;"	s
FormatWith	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^pub struct FormatWith<'a, I, F> {$/;"	s
FormattedDuration	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/format.rs	/^pub struct FormattedDuration(pub Duration);$/;"	s
Formatter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub trait Formatter {$/;"	t
Fragment	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^pub enum Fragment {$/;"	g
FromPrimitive	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^pub trait FromPrimitive: Sized {$/;"	t
Future	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    type Future = Connecting;$/;"	T
Future	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/dns.rs	/^    type Future = Box<Future<Item=Self::Addrs, Error=io::Error> + Send>;$/;"	T
GridBorderDecoration	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^pub struct GridBorderDecoration {$/;"	s
Group	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub struct Group<'a, K: 'a, I: 'a, F: 'a>$/;"	s
GroupBy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub struct GroupBy<K, I, F>$/;"	s
GroupInner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^struct GroupInner<K, I, F>$/;"	s
Groups	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub struct Groups<'a, K: 'a, I: 'a, F: 'a>$/;"	s
Gzip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^struct Gzip {$/;"	s
HEX	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^static HEX: [u8; 256] = {$/;"	c
HEX_DIGITS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^                static HEX_DIGITS: [u8; 16] = *b"0123456789abcdef";$/;"	c
HasCombination	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub trait HasCombination<I>: Sized {$/;"	t
HeadTail	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^struct HeadTail<I>$/;"	s
HighlightingAssets	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^pub struct HighlightingAssets {$/;"	s
HttpConnector	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^type HttpConnector = ::hyper::client::HttpConnector;$/;"	T
HttpConnector	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^type HttpConnector = ::hyper::client::HttpConnector<TrustDnsResolver>;$/;"	T
HumanBytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/format.rs	/^pub struct HumanBytes(pub u64);$/;"	s
HumanDuration	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/format.rs	/^pub struct HumanDuration(pub Duration);$/;"	s
HyperClient	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^type HyperClient = ::hyper::Client<Connector>;$/;"	T
INIT_BUFFER_SIZE	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^const INIT_BUFFER_SIZE: usize = 8192;$/;"	c
Identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub enum Identifier {$/;"	g
IdentifierDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	t
Identity	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^pub struct Identity {$/;"	s
IgnoredAny	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Impossible	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InPlaceImplGenerics	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^struct InPlaceImplGenerics<'a>(&'a Parameters);$/;"	s
InPlaceSeed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
InPlaceTypeGenerics	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^struct InPlaceTypeGenerics<'a>(&'a Parameters);$/;"	s
Index	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^pub trait Index: private::Sealed {$/;"	t
Inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^enum Inner {$/;"	g
Inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^enum Inner {$/;"	g
Inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^enum Inner {$/;"	g
Inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/dns.rs	/^struct Inner {$/;"	s
Inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^struct Inner {$/;"	s
InnerClientHandle	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^struct InnerClientHandle {$/;"	s
Input	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^pub struct Input<'a, T> {$/;"	s
InputFile	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/inputfile.rs	/^pub enum InputFile {$/;"	g
InputFileReader	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/inputfile.rs	/^pub struct InputFileReader<'a> {$/;"	s
InteractivePrinter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^pub struct InteractivePrinter<'a> {$/;"	s
Intercept	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^enum Intercept {$/;"	g
Interleave	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Interleave<I, J> {$/;"	s
InterleaveShortest	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
InternallyTaggedUnitVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s
Intersperse	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs	/^pub struct Intersperse<I>$/;"	s
IntoChunks	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub struct IntoChunks<I>$/;"	s
IntoDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	t
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type IntoIter = Chunks<'a, I>;$/;"	T
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type IntoIter = Groups<'a, K, I, F>;$/;"	T
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    type IntoIter = RcIter<I>;$/;"	T
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    type IntoIter = <::hyper::Chunk as IntoIterator>::IntoIter;$/;"	T
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    type IntoIter = IntoIter;$/;"	T
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    type IntoIter = Iter<'a>;$/;"	T
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    type IntoIter = IterMut<'a>;$/;"	T
IntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct IntoIter {$/;"	s
IntoIterImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type IntoIterImpl = btree_map::IntoIter<String, Value>;$/;"	T
IntoIterImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type IntoIterImpl = indexmap::map::IntoIter<String, Value>;$/;"	T
IntoProxyScheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^pub trait IntoProxyScheme {$/;"	t
IntoUrl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/into_url.rs	/^pub trait IntoUrl: PolyfillTryInto {}$/;"	t
InvalidAPIKey	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^struct InvalidAPIKey;$/;"	s
IoRead	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^pub struct IoRead<R>$/;"	s
IpAddrVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    struct IpAddrVisitor;$/;"	s
IpAddrVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            struct IpAddrVisitor;$/;"	s
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    type Item = L::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^            type Item = ($($I),*);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = (I::Item, J::Item);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = (I::Item,);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = A;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = B;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = R;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = Result<U, E>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = T;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    type Item = usize;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    type Item = Vec<I::Item>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    type Item = Vec<I::Item>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^            type Item = ($($B,)* X, );$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type Item = (K, Group<'a, K, I, F>);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type Item = Chunk<'a, I>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs	/^    type Item = EitherOrBoth<I::Item, J::Item>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs	/^    type Item = T;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    type Item = A;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs	/^    type Item = A;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^    type Item = A;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^    type Item = St;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^            type Item = $A;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    type Item = T::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    type Item = T;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    type Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^    type Item = I::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs	/^    type Item = Position<I::Item>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs	/^    type Item = (I::Item, J::Item);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs	/^    type Item = EitherOrBoth<T::Item, U::Item>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs	/^            type Item = ($($B::Item,)*);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    type Item = Chunk;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    type Item = u8;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    type Item = Response;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    type Item = Chunk;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    type Item = Inner;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    type Item = T;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        type Item = TlsStream<S>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    type Item = T;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    type Item = <async_impl::Decoder as Stream>::Item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/wait.rs	/^    type Item = Result<S::Item, Waited<S::Error>>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    type Item = Result<T>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/iter.rs	/^    type Item = io::Result<u8>;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            type Item = $item;$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    type Item = (&'a String, &'a Value);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    type Item = (&'a String, &'a mut Value);$/;"	T
Item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    type Item = (String, Value);$/;"	T
Iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct Iter<'a> {$/;"	s
IterImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type IterImpl<'a> = btree_map::Iter<'a, String, Value>;$/;"	T
IterImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type IterImpl<'a> = indexmap::map::Iter<'a, String, Value>;$/;"	T
IterMut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct IterMut<'a> {$/;"	s
IterMutImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type IterMutImpl<'a> = btree_map::IterMut<'a, String, Value>;$/;"	T
IterMutImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type IterMutImpl<'a> = indexmap::map::IterMut<'a, String, Value>;$/;"	T
Iterate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^pub struct Iterate<St, F> {$/;"	s
Itertools	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^pub trait Itertools : Iterator {$/;"	t
Json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^pub struct Json<T> {$/;"	s
KMerge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^pub struct KMerge<I>$/;"	s
KMergeBy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^pub struct KMergeBy<I, F>$/;"	s
Key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type Key = K;$/;"	T
Key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type Key = usize;$/;"	T
Key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    type Key;$/;"	T
KeyClass	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^enum KeyClass {$/;"	g
KeyClassifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct KeyClassifier;$/;"	s
KeyFunction	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^trait KeyFunction<A> {$/;"	t
Keys	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct Keys<'a> {$/;"	s
KeysImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type KeysImpl<'a> = btree_map::Keys<'a, String, Value>;$/;"	T
KeysImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type KeysImpl<'a> = indexmap::map::Keys<'a, String, Value>;$/;"	T
Kind	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^enum Kind {$/;"	g
KindVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                struct KindVisitor;$/;"	s
LazyBuffer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^struct LazyBuffer<I: Iterator> {$/;"	s
LenHint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^trait LenHint: Iterator {$/;"	t
LineColIterator	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/iter.rs	/^pub struct LineColIterator<I> {$/;"	s
LineNumberDecoration	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^pub struct LineNumberDecoration {$/;"	s
LineRange	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^pub struct LineRange {$/;"	s
LineRanges	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^pub struct LineRanges {$/;"	s
MAX_LEN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^            const MAX_LEN: usize = 15;$/;"	c
MAX_LEN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^            const MAX_LEN: usize = 21;$/;"	c
MAX_LEN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^            const MAX_LEN: usize = 39;$/;"	c
MAX_LEN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^            const MAX_LEN: usize = 47;$/;"	c
MAX_ONE_B	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^const MAX_ONE_B: u32 = 0x80;$/;"	c
MAX_THREE_B	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^const MAX_THREE_B: u32 = 0x10000;$/;"	c
MAX_TWO_B	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^const MAX_TWO_B: u32 = 0x800;$/;"	c
Map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct Map<K, V> {$/;"	s
MapAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	t
MapAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^struct MapAccess<'a, R: 'a> {$/;"	s
MapAccessDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s
MapDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s
MapDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct MapDeserializer {$/;"	s
MapImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type MapImpl<K, V> = BTreeMap<K, V>;$/;"	T
MapImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type MapImpl<K, V> = IndexMap<K, V>;$/;"	T
MapInto	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct MapInto<I, R> {$/;"	s
MapKey	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^struct MapKey<'a, R: 'a> {$/;"	s
MapKeyDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct MapKeyDeserializer<'de> {$/;"	s
MapKeySerializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^struct MapKeySerializer<'a, W: 'a, F: 'a> {$/;"	s
MapKeySerializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^struct MapKeySerializer;$/;"	s
MapRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s
MapRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct MapRefDeserializer<'de> {$/;"	s
MapResults	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct MapResults<I, F> {$/;"	s
MapVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                struct MapVisitor<K, V $(, $typaram)*> {$/;"	s
Match	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^pub struct Match(pub Fragment);$/;"	s
Merge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Merge<I, J>$/;"	s
MergeBy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct MergeBy<I, J, F>$/;"	s
MergeCore	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^struct MergeCore<I, J>$/;"	s
MergeJoinBy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs	/^pub struct MergeJoinBy<I: Iterator, J: Iterator, F> {$/;"	s
MidHandshake	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    struct MidHandshake<S> {$/;"	s
MinMaxResult	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs	/^pub enum MinMaxResult<T> {$/;"	g
MissingFieldDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s
MultiObject	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^struct MultiObject {$/;"	s
MultiPeek	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^pub struct MultiPeek<I>$/;"	s
MultiProduct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^pub struct MultiProduct<I>(Vec<MultiProductIter<I>>)$/;"	s
MultiProductIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^struct MultiProductIter<I>$/;"	s
MultiProductIterState	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^enum MultiProductIterState {$/;"	g
MultiProgress	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^pub struct MultiProgress {$/;"	s
MultiProgressState	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^struct MultiProgressState {$/;"	s
MyStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^        struct MyStruct;$/;"	s
MyStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^        struct MyStruct;$/;"	s
N	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^enum N {$/;"	g
N	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^type N = String;$/;"	T
NN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const NN: u8 = b'n'; \/\/ \\x0A$/;"	c
NULL	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^        static NULL: Value = Value::Null;$/;"	c
Name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub struct Name {$/;"	s
NeverDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
Number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^pub struct Number {$/;"	s
NumberDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^pub struct NumberDeserializer {$/;"	s
NumberFieldDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^struct NumberFieldDeserializer;$/;"	s
NumberFromString	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^pub struct NumberFromString {$/;"	s
NumberKey	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^struct NumberKey;$/;"	s
NumberStrEmitter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^struct NumberStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
NumberValueEmitter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^struct NumberValueEmitter;$/;"	s
NumberVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^        struct NumberVisitor;$/;"	s
OccupiedEntry	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct OccupiedEntry<'a> {$/;"	s
OccupiedEntryImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type OccupiedEntryImpl<'a> = btree_map::OccupiedEntry<'a, String, Value>;$/;"	T
OccupiedEntryImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type OccupiedEntryImpl<'a> = indexmap::map::OccupiedEntry<'a, String, Value>;$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type Ok = Content;$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type Ok = ();$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type Ok;$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type Ok = ();$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type Ok = String;$/;"	T
Ok	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type Ok = Value;$/;"	T
OneOf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^struct OneOf {$/;"	s
OptionVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
Opts	/home/andre/Projects/rust_projs/pipe_cli/src/args.rs	/^pub struct Opts {$/;"	s
OsStringVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
Output	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    type Output = I::Item;$/;"	T
Output	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    type Output = Value;$/;"	T
Output	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    type Output = Value;$/;"	T
OutputComponent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^pub enum OutputComponent {$/;"	g
OutputComponents	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^pub struct OutputComponents(pub HashSet<OutputComponent>);$/;"	s
OutputType	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/output.rs	/^pub enum OutputType {$/;"	g
OutputWrap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^pub enum OutputWrap {$/;"	g
Owned	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    type Owned = Box<RawValue>;$/;"	T
OwnedRawDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^pub struct OwnedRawDeserializer {$/;"	s
POW10	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^static POW10: [f64; 309] = [$/;"	c
PRETTYPRINT_THEME_DEFAULT	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^pub const PRETTYPRINT_THEME_DEFAULT: &str = "Monokai Extended";$/;"	c
PadUsing	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs	/^pub struct PadUsing<I, F> {$/;"	s
PagingMode	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^pub enum PagingMode {$/;"	g
Pair	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub trait Pair {$/;"	t
PairDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
Parameters	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^struct Parameters {$/;"	s
Parameters	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^struct Parameters {$/;"	s
Params	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^        struct Params {$/;"	s
Params	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^        struct Params {$/;"	s
ParserNumber	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^pub enum ParserNumber {$/;"	g
Part	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^pub struct Part {$/;"	s
Part	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^pub struct Part {$/;"	s
PasswordInput	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^pub struct PasswordInput<'a> {$/;"	s
PathBufVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct PathVisitor;$/;"	s
PeekingNext	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^pub trait PeekingNext : Iterator {$/;"	t
PeekingTakeWhile	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^pub struct PeekingTakeWhile<'a, I: 'a, F>$/;"	s
Pending	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^struct Pending {$/;"	s
PendingInner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^enum PendingInner {$/;"	g
PendingRequest	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^struct PendingRequest {$/;"	s
PhantomDataVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
Phase	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub struct Phase {$/;"	s
Policy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^enum Policy {$/;"	g
PolyfillTryInto	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/into_url.rs	/^pub trait PolyfillTryInto {$/;"	t
Position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs	/^pub enum Position<T> {$/;"	g
Position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^pub struct Position {$/;"	s
Positions	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Positions<I, F> {$/;"	s
PrettyFormatter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub struct PrettyFormatter<'a> {$/;"	s
PrettyPrint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^pub struct PrettyPrint {$/;"	s
PrimitiveVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                struct PrimitiveVisitor;$/;"	s
PrimitiveVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            struct PrimitiveVisitor;$/;"	s
Printer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^pub trait Printer {$/;"	t
ProcessResults	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs	/^pub struct ProcessResults<'a, I, E: 'a> {$/;"	s
Product	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Product<I, J>$/;"	s
ProgressBar	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^pub struct ProgressBar {$/;"	s
ProgressBarIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^pub struct ProgressBarIter<I> {$/;"	s
ProgressBarRead	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^pub struct ProgressBarRead<R> {$/;"	s
ProgressDrawState	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^struct ProgressDrawState {$/;"	s
ProgressDrawTarget	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^pub struct ProgressDrawTarget {$/;"	s
ProgressDrawTargetKind	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^enum ProgressDrawTargetKind {$/;"	g
ProgressStyle	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^pub struct ProgressStyle {$/;"	s
Proxy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^pub struct Proxy {$/;"	s
ProxyScheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^pub enum ProxyScheme {$/;"	g
PutBack	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct PutBack<I>$/;"	s
PutBackN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs	/^pub struct PutBackN<I: Iterator> {$/;"	s
QU	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    const QU: bool = true; \/\/ quote \\x22$/;"	c
QU	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const QU: u8 = b'"'; \/\/ \\x22$/;"	c
RR	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const RR: u8 = b'r'; \/\/ \\x0D$/;"	c
RangeCheckResult	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^pub enum RangeCheckResult {$/;"	g
RangeVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s
RawKey	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^struct RawKey;$/;"	s
RawKeyDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^struct RawKeyDeserializer;$/;"	s
RawValue	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^pub struct RawValue {$/;"	s
RawValueEmitter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^struct RawValueEmitter;$/;"	s
RawValueStrEmitter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^struct RawValueStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
RcIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^pub struct RcIter<I> {$/;"	s
Read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^pub trait Read<'de>: private::Sealed {$/;"	t
ReadState	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^enum ReadState {$/;"	g
ReadableChunks	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^pub struct ReadableChunks<S> {$/;"	s
Redirect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^pub trait Redirect {$/;"	t
RedirectAction	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^pub struct RedirectAction {$/;"	s
RedirectAttempt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^pub struct RedirectAttempt<'a> {$/;"	s
RedirectPolicy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^pub struct RedirectPolicy {$/;"	s
Reference	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^pub enum Reference<'b, 'c, T: ?Sized + 'static> {$/;"	g
ReferenceFromString	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^pub struct ReferenceFromString;$/;"	s
ReferenceVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^        struct ReferenceVisitor;$/;"	s
RenameAllRules	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub struct RenameAllRules {$/;"	s
RenameRule	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/case.rs	/^pub enum RenameRule {$/;"	g
RepeatCall	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^pub struct RepeatCall<F> {$/;"	s
RepeatN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs	/^pub struct RepeatN<A> {$/;"	s
Request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^pub struct Request {$/;"	s
Request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^pub struct Request {$/;"	s
RequestBuilder	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^pub struct RequestBuilder {$/;"	s
RequestBuilder	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^pub struct RequestBuilder {$/;"	s
Response	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^pub struct Response {$/;"	s
Response	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^pub struct Response {$/;"	s
ResponseBuilderExt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^pub trait ResponseBuilderExt {$/;"	t
ResponseUrl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^struct ResponseUrl(Url);$/;"	s
Result	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	T
Result	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	T
ResultVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s
Sealed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        pub trait Sealed {}$/;"	t
Sealed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    pub trait Sealed {}$/;"	t
Sealed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    pub trait Sealed {}$/;"	t
Second	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        type Second = B;$/;"	T
Second	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        type Second;$/;"	T
Second	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	T
SeedStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s
SeedTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s
Select	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^pub struct Select<'a> {$/;"	s
SelectionStyle	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^pub enum SelectionStyle {$/;"	g
SeqAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	t
SeqAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^struct SeqAccess<'a, R: 'a> {$/;"	s
SeqAccessDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s
SeqDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct SeqDeserializer {$/;"	s
SeqInPlaceVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                struct SeqInPlaceVisitor<'a, T: 'a $(, $typaram: 'a)*>(&'a mut $ty<T $(, $typaram)*>);$/;"	s
SeqRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s
SeqRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct SeqRefDeserializer<'de> {$/;"	s
SeqVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                struct SeqVisitor<T $(, $typaram)*> {$/;"	s
SerAndDe	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^type SerAndDe<T> = (Option<T>, Option<T>);$/;"	T
Serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        trait Serialize {$/;"	t
Serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait Serialize {$/;"	t
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        type SerializeMap = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	t
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeMap = Compound<'a, W, F>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeMap = Impossible<String, Error>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeMap = Impossible<Value, Error>;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeMap = SerializeMap;$/;"	T
SerializeMap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^pub enum SerializeMap {$/;"	g
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        type SerializeSeq = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	t
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeSeq = Compound<'a, W, F>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeSeq = Impossible<String, Error>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeSeq = Impossible<Value, Error>;$/;"	T
SerializeSeq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeSeq = SerializeVec;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        type SerializeStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	t
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeStruct = Compound<'a, W, F>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeStruct = Impossible<String, Error>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeStruct = Impossible<Value, Error>;$/;"	T
SerializeStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeStruct = SerializeMap;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        type SerializeStructVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	t
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeStructVariant = Compound<'a, W, F>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<String, Error>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<Value, Error>;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeStructVariant = SerializeStructVariant;$/;"	T
SerializeStructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^pub struct SerializeStructVariant {$/;"	s
SerializeStructVariantAsMapValue	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        type SerializeTuple = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	t
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeTuple = Compound<'a, W, F>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTuple = Impossible<String, Error>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTuple = Impossible<Value, Error>;$/;"	T
SerializeTuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTuple = SerializeVec;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        type SerializeTupleStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	t
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeTupleStruct = Compound<'a, W, F>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<String, Error>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<Value, Error>;$/;"	T
SerializeTupleStruct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTupleStruct = SerializeVec;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^        type SerializeTupleVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	t
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeTupleVariant = Compound<'a, W, F>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<String, Error>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<Value, Error>;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariant;$/;"	T
SerializeTupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^pub struct SerializeTupleVariant {$/;"	s
SerializeTupleVariantAsMapValue	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s
SerializeVec	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^pub struct SerializeVec {$/;"	s
Serializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	t
Serializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub struct Serializer<W, F = CompactFormatter> {$/;"	s
Serializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^pub struct Serializer;$/;"	s
SimpleTheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^pub struct SimpleTheme;$/;"	s
SizeHint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub type SizeHint = (usize, Option<usize>);$/;"	T
SliceRead	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^pub struct SliceRead<'a> {$/;"	s
SocketAddrVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    struct SocketAddrVisitor;$/;"	s
SocketAddrVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            struct SocketAddrVisitor;$/;"	s
State	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^        type State<T> = Result<T, Option<T>>;$/;"	T
State	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub enum State {$/;"	g
Status	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^enum Status {$/;"	g
Step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Step<I> {$/;"	s
Stmts	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^pub struct Stmts(pub Fragment);$/;"	s
StrDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrRead	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^pub struct StrRead<'a> {$/;"	s
StrVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StreamDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^pub struct StreamDeserializer<'de, R, T> {$/;"	s
StreamState	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^enum StreamState {$/;"	g
StringDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringInPlaceVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct StringVisitor;$/;"	s
StructOpt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.17/src/lib.rs	/^pub trait StructOpt {$/;"	t
StructTrait	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^enum StructTrait {$/;"	g
StructVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^enum StructVariant<'a> {$/;"	g
Style	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^pub enum Style {$/;"	g
SyntaxMapping	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/syntax_mapping.rs	/^pub struct SyntaxMapping(HashMap<String, String>);$/;"	s
TAG_CONT	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^const TAG_CONT: u8 = 0b1000_0000;$/;"	c
TAG_FOUR_B	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^const TAG_FOUR_B: u8 = 0b1111_0000;$/;"	c
TAG_THREE_B	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^const TAG_THREE_B: u8 = 0b1110_0000;$/;"	c
TAG_TWO_B	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^const TAG_TWO_B: u8 = 0b1100_0000;$/;"	c
TOKEN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^pub const TOKEN: &'static str = "$serde_json::private::Number";$/;"	c
TOKEN	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^pub const TOKEN: &'static str = "$serde_json::private::RawValue";$/;"	c
TT	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const TT: u8 = b't'; \/\/ \\x09$/;"	c
TUNNEL_OK	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    static TUNNEL_OK: &'static [u8] = b"\\$/;"	c
TagContentOtherField	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g
TagContentOtherFieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s
TagOrContent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g
TagOrContentField	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g
TagOrContentFieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s
TagOrContentVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s
TagType	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub enum TagType {$/;"	g
TaggedContent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s
TaggedContentVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s
TaggedSerializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
TakeWhileRef	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct TakeWhileRef<'a, I: 'a, F> {$/;"	s
Target	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    type Target = L::Target;$/;"	T
Target	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    type Target = [u8];$/;"	T
Target	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    type Target = T;$/;"	T
Tee	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs	/^pub struct Tee<I>$/;"	s
TeeBuffer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs	/^struct TeeBuffer<A, I> {$/;"	s
TemplateVar	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^pub struct TemplateVar<'a> {$/;"	s
Theme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^pub trait Theme {$/;"	t
ThreadNotify	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/wait.rs	/^struct ThreadNotify {$/;"	s
ThreadSender	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^type ThreadSender = mpsc::UnboundedSender<(async_impl::Request, oneshot::Sender<::Result<async_impl::Response>>)>;$/;"	T
Timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^struct Timeout(Option<Duration>);$/;"	s
TlsConnectorExt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    pub trait TlsConnectorExt: sealed::Sealed {$/;"	t
TlsStream	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    pub struct TlsStream<S> {$/;"	s
Transport	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    type Transport = Conn;$/;"	T
Tunnel	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^struct Tunnel<T> {$/;"	s
TunnelState	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^enum TunnelState {$/;"	g
Tuple1Combination	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Tuple1Combination<I> {$/;"	s
TupleBuffer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^pub struct TupleBuffer<T>$/;"	s
TupleCollect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^pub trait TupleCollect: Sized {$/;"	t
TupleCombinations	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct TupleCombinations<I, T>$/;"	s
TupleInPlaceVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    struct TupleInPlaceVisitor<'a, $($name: 'a,)+>(&'a mut ($($name,)+));$/;"	s
TupleTrait	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^enum TupleTrait {$/;"	g
TupleVariant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^enum TupleVariant {$/;"	g
TupleVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    struct TupleVisitor<$($name,)+> {$/;"	s
TupleWindows	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^pub struct TupleWindows<I, T>$/;"	s
Tuples	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^pub struct Tuples<I, T>$/;"	s
Type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^struct Type<'a>(&'a Value);$/;"	s
U32Deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
UU	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const UU: u8 = b'u'; \/\/ \\x00...\\x1F except the ones above$/;"	c
Unauthorized	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^struct Unauthorized;$/;"	s
Unexpected	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
Unfold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^pub struct Unfold<St, F> {$/;"	s
Unique	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^pub struct Unique<I: Iterator> {$/;"	s
UniqueBy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^pub struct UniqueBy<I: Iterator, V, F> {$/;"	s
UnitDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s
UnitOnly	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct UnitOnly;$/;"	s
UnitVariantAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^struct UnitVariantAccess<'a, R: 'a> {$/;"	s
UnitVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
Unsupported	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^enum Unsupported {$/;"	g
Untagged	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^enum Untagged {$/;"	g
UntaggedUnitVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s
Update	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct Update<I, F> {$/;"	s
User	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^pub struct User {$/;"	s
VARIANTS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	c
VARIANTS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	c
VARIANTS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
VARIANTS	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#variant_names),* ];$/;"	c
VacantEntry	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct VacantEntry<'a> {$/;"	s
VacantEntryImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type VacantEntryImpl<'a> = btree_map::VacantEntry<'a, String, Value>;$/;"	T
VacantEntryImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type VacantEntryImpl<'a> = indexmap::map::VacantEntry<'a, String, Value>;$/;"	T
Validator	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/validate.rs	/^pub trait Validator {$/;"	t
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                        type Value = $ty;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                        type Value = ($($name,)+);$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                        type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    type Value = $name_kind;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    type Value = $ty;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    type Value = $ty<K, V $(, $typaram)*>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    type Value = $ty<T $(, $typaram)*>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    type Value = Field;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                type Value = Field;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                type Value = [T; $len];$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                type Value = i128;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                type Value = net::IpAddr;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                type Value = net::SocketAddr;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                type Value = u128;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            type Value = $name;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            type Value = Duration;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = &'a Path;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = &'a str;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = CString;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = Option<T>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = OsString;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = PathBuf;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = String;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = [T; 0];$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = bool;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    type Value = char;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    type Value = T;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    type Value;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        type Value = V::Value;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = Content<'de>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^                type Value = #this #ty_generics;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            type Value = #this #ty_generics;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            type Value = #this;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            type Value = __Field #lifetime;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            type Value = Map<String, Value>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            type Value = Number;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            type Value = NumberFromString;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^            type Value = &'de RawValue;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^            type Value = ();$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^            type Value = Box<RawValue>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    type Value = &'de RawValue;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    type Value = Box<RawValue>;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            type Value = Value;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    type Value = KeyClass;$/;"	T
Value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^pub enum Value {$/;"	g
ValueVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^        struct ValueVisitor;$/;"	s
Values	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct Values<'a> {$/;"	s
ValuesImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type ValuesImpl<'a> = btree_map::Values<'a, String, Value>;$/;"	T
ValuesImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type ValuesImpl<'a> = indexmap::map::Values<'a, String, Value>;$/;"	T
ValuesMut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^pub struct ValuesMut<'a> {$/;"	s
ValuesMutImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type ValuesMutImpl<'a> = btree_map::ValuesMut<'a, String, Value>;$/;"	T
ValuesMutImpl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^type ValuesMutImpl<'a> = indexmap::map::ValuesMut<'a, String, Value>;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^pub struct Variant<'a> {$/;"	s
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub struct Variant {$/;"	s
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    type Variant = Self;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    type Variant = UnitOnly;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    type Variant = VariantDeserializer;$/;"	T
Variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    type Variant = VariantRefDeserializer<'de>;$/;"	T
VariantAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	t
VariantAccess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^struct VariantAccess<'a, R: 'a> {$/;"	s
VariantDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s
VariantDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct VariantDeserializer {$/;"	s
VariantRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s
VariantRefDeserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^struct VariantRefDeserializer<'de> {$/;"	s
VecAttr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^struct VecAttr<'c, T> {$/;"	s
VecInPlaceVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s
VecIntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^type VecIntoIter<T> = ::std::vec::IntoIter<T>;$/;"	T
VecIntoIter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^type VecIntoIter<T> = ::std::vec::IntoIter<T>;$/;"	T
VecVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s
Visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	t
Visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^        struct Visitor;$/;"	s
Visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^        struct Visitor;$/;"	s
Void	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^enum Void {}$/;"	g
WaitBody	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^struct WaitBody {$/;"	s
WhileSome	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub struct WhileSome<I> {$/;"	s
WithPosition	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs	/^pub struct WithPosition<I>$/;"	s
WriterFormatter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^struct WriterFormatter<'a, 'b: 'a> {$/;"	s
Zip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs	/^pub struct Zip<T> {$/;"	s
ZipEq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs	/^pub struct ZipEq<I, J> {$/;"	s
ZipLongest	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs	/^pub struct ZipLongest<T, U> {$/;"	s
__	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    const __: bool = false; \/\/ allow unescaped$/;"	c
__	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    const __: u8 = 255; \/\/ not a hex digit$/;"	c
__	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^const __: u8 = 0;$/;"	c
__AdjacentlyTagged	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^        struct __AdjacentlyTagged #wrapper_generics #where_clause {$/;"	s
__DeserializeWith	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        struct __DeserializeWith #de_impl_generics #where_clause {$/;"	s
__EnumFlatten	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^                struct __EnumFlatten #wrapper_generics #where_clause {$/;"	s
__Field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        enum __Field #lifetime {$/;"	g
__FieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        struct __FieldVisitor #de_impl_generics #where_clause {$/;"	s
__FieldVisitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        struct __FieldVisitor;$/;"	s
__Seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        struct __Seed #de_impl_generics #where_clause {$/;"	s
__SerializeWith	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^        struct __SerializeWith #wrapper_impl_generics #where_clause {$/;"	s
__Visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        struct __Visitor #de_impl_generics #where_clause {$/;"	s
__Visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        struct __Visitor #in_place_impl_generics #where_clause {$/;"	s
__Visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        struct __Visitor;$/;"	s
__private_deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^macro_rules! __private_deserialize {$/;"	d
__private_serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^macro_rules! __private_serialize {$/;"	d
__private_visit_untagged_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	f
__serialize_unimplemented	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^macro_rules! __serialize_unimplemented {$/;"	d
__serialize_unimplemented_helper	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	d
__serialize_unimplemented_method	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	d
_assert_impls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/lib.rs	/^fn _assert_impls() {$/;"	f
_interact_on	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    fn _interact_on(&self, term: &Term, allow_quit: bool) -> io::Result<Option<usize>> {$/;"	f
_unsized_ref_propagation	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn _unsized_ref_propagation() {$/;"	f
_unsized_std_propagation	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn _unsized_std_propagation() {$/;"	f
a	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn a() -> Either<u32, u32> {$/;"	f
add	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn add(&self, pb: ProgressBar) -> ProgressBar {$/;"	f
add	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub fn add(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
add_body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_body() {$/;"	f
add_body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_body() {$/;"	f
add_cookie_header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^fn add_cookie_header(headers: &mut HeaderMap, cookie_store: &cookie::CookieStore, url: &Url) {$/;"	f
add_form	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_form() {$/;"	f
add_form	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_form() {$/;"	f
add_header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_header() {$/;"	f
add_header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_header() {$/;"	f
add_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_headers() {$/;"	f
add_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_headers() {$/;"	f
add_headers_multi	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_headers_multi() {$/;"	f
add_headers_multi	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_headers_multi() {$/;"	f
add_json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_json() {$/;"	f
add_json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_json() {$/;"	f
add_json_fail	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_json_fail() {$/;"	f
add_json_fail	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_json_fail() {$/;"	f
add_line	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn add_line(&mut self) {$/;"	f
add_query_append	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_query_append() {$/;"	f
add_query_append	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_query_append() {$/;"	f
add_query_append_same	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_query_append_same() {$/;"	f
add_query_append_same	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_query_append_same() {$/;"	f
add_query_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_query_map() {$/;"	f
add_query_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_query_map() {$/;"	f
add_query_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn add_query_struct() {$/;"	f
add_query_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn add_query_struct() {$/;"	f
add_root_certificate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn add_root_certificate(mut self, cert: Certificate) -> ClientBuilder {$/;"	f
add_root_certificate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn add_root_certificate(self, cert: Certificate) -> ClientBuilder {$/;"	f
add_scalar	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub fn add_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
advance	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn advance(&mut self, n: usize) {$/;"	f
aliases	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	f
all	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn all<F>(&mut self, f: F) -> bool$/;"	f
all	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn all<G>(&mut self, mut f: G) -> bool$/;"	f
all	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn all<I, F>(iterable: I, f: F) -> bool$/;"	f
all	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    pub fn all<U: IntoProxyScheme>(proxy_scheme: U) -> ::Result<Proxy> {$/;"	f
all_equal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn all_equal(&mut self) -> bool$/;"	f
all_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^    pub fn all_fields(&'a self) -> Box<Iterator<Item = &'a Field<'a>> + 'a> {$/;"	f
allow_empty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn allow_empty(&mut self, val: bool) -> &mut Input<'a, T> {$/;"	f
allow_empty_password	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn allow_empty_password(&mut self, allow_empty_password: bool) -> &mut PasswordInput<'a> {$/;"	f
allow_transparent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn allow_transparent(field: &Field, derive: Derive) -> bool {$/;"	f
any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn any<I, F>(iterable: I, f: F) -> bool$/;"	f
apply_draw_state	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn apply_draw_state(&mut self, draw_state: ProgressDrawState) -> io::Result<()> {$/;"	f
apply_to_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/case.rs	/^    pub fn apply_to_field(&self, field: &str) -> String {$/;"	f
apply_to_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/case.rs	/^    pub fn apply_to_variant(&self, variant: &str) -> String {$/;"	f
array_impls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! array_impls {$/;"	d
array_impls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	d
as_array	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_array(&self) -> Option<&Vec<Value>> {$/;"	f
as_array_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_array_mut(&mut self) -> Option<&mut Vec<Value>> {$/;"	f
as_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_bool(&self) -> Option<bool> {$/;"	f
as_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	f
as_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	f
as_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	f
as_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	f
as_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^            fn as_mut(&mut self) -> &mut $t {$/;"	f
as_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn as_mut(&mut self) -> &mut Target {$/;"	f
as_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn as_mut(&mut self) -> &mut [Target] {$/;"	f
as_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn as_mut(&mut self) -> Either<&mut L, &mut R> {$/;"	f
as_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs	/^    pub fn as_mut(&mut self) -> EitherOrBoth<&mut A, &mut B> {$/;"	f
as_null	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_null(&self) -> Option<()> {$/;"	f
as_object	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_object(&self) -> Option<&Map<String, Value>> {$/;"	f
as_object_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_object_mut(&mut self) -> Option<&mut Map<String, Value>> {$/;"	f
as_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^            fn as_ref(&self) -> &$t {$/;"	f
as_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn as_ref(&self) -> &Target {$/;"	f
as_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn as_ref(&self) -> &[Target] {$/;"	f
as_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn as_ref(&self) -> Either<&L, &R> {$/;"	f
as_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs	/^    pub fn as_ref(&self) -> EitherOrBoth<&A, &B> {$/;"	f
as_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^    fn as_ref(&self) -> &TokenStream {$/;"	f
as_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	f
as_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^fn as_str<'de, 's, R: Read<'de>>(read: &R, slice: &'s [u8]) -> Result<&'s str> {$/;"	f
as_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_str(&self) -> Option<&str> {$/;"	f
as_terminal_escaped	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/terminal.rs	/^pub fn as_terminal_escaped($/;"	f
as_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	f
as_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	f
assert_clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/lib.rs	/^    fn assert_clone<T: Clone>() {}$/;"	f
assert_equal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^pub fn assert_equal<I, J>(a: I, b: J)$/;"	f
assert_send	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/lib.rs	/^    fn assert_send<T: Send>() {}$/;"	f
assert_sync	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/lib.rs	/^    fn assert_sync<T: Sync>() {}$/;"	f
async	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/lib.rs	/^pub mod async {$/;"	m
at_most_one	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn at_most_one(mut self) -> Result<Option<T>, ()> {$/;"	f
avg_time_per_step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn avg_time_per_step(&self) -> Duration {$/;"	f
b	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn b() -> Either<String, &'static str> {$/;"	f
bad_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> M::Error {$/;"	f
bad_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
basic	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn basic() {$/;"	f
basic	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/inputfile.rs	/^fn basic() {$/;"	f
basic	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/syntax_mapping.rs	/^fn basic() {$/;"	f
basic_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn basic_auth<U, P>(self, username: U, password: Option<P>) -> RequestBuilder$/;"	f
basic_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    pub fn basic_auth(mut self, username: &str, password: &str) -> Proxy {$/;"	f
basic_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn basic_auth<U, P>(self, username: U, password: Option<P>) -> RequestBuilder$/;"	f
basic_delete_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn basic_delete_request() {$/;"	f
basic_delete_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn basic_delete_request() {$/;"	f
basic_get_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn basic_get_request() {$/;"	f
basic_get_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn basic_get_request() {$/;"	f
basic_head_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn basic_head_request() {$/;"	f
basic_head_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn basic_head_request() {$/;"	f
basic_patch_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn basic_patch_request() {$/;"	f
basic_patch_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn basic_patch_request() {$/;"	f
basic_post_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn basic_post_request() {$/;"	f
basic_post_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn basic_post_request() {$/;"	f
basic_put_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn basic_put_request() {$/;"	f
basic_put_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn basic_put_request() {$/;"	f
batching	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn batching<I, F>(iter: I, f: F) -> Batching<I, F> {$/;"	f
batching	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn batching<B, F>(self, f: F) -> Batching<Self, F>$/;"	f
bearer_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn bearer_auth<T>(self, token: T) -> RequestBuilder$/;"	f
bearer_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn bearer_auth<T>(self, token: T) -> RequestBuilder$/;"	f
begin_array	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn begin_array<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_array_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn begin_array_value<W: ?Sized>(&mut self, writer: &mut W, first: bool) -> io::Result<()>$/;"	f
begin_object	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn begin_object<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_object_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn begin_object_key<W: ?Sized>(&mut self, writer: &mut W, first: bool) -> io::Result<()>$/;"	f
begin_object_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn begin_object_value<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
begin_raw_buffering	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	f
begin_raw_buffering	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn begin_raw_buffering(&mut self);$/;"	f
begin_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn begin_string<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn body(&self) -> Option<&Body> {$/;"	f
body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn body<T: Into<Body>>(mut self, body: T) -> RequestBuilder {$/;"	f
body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn body(&self) -> &Decoder {$/;"	f
body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn body(&self) -> Option<&Body> {$/;"	f
body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn body<T: Into<Body>>(mut self, body: T) -> RequestBuilder {$/;"	f
body_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<Body> {$/;"	f
body_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn body_mut(&mut self) -> &mut Decoder {$/;"	f
body_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<Body> {$/;"	f
borrow_cow_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D>(deserializer: D) -> Result<Cow<'a, [u8]>, D::Error>$/;"	f
borrow_cow_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D>(deserializer: D) -> Result<Cow<'a, str>, D::Error>$/;"	f
borrowable_lifetimes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn borrowable_lifetimes($/;"	f
borrowed_lifetimes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn borrowed_lifetimes(cont: &Container) -> BorrowedLifetimes {$/;"	f
borrowed_lifetimes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn borrowed_lifetimes(&self) -> &BTreeSet<syn::Lifetime> {$/;"	f
boundary	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn boundary(&self) -> &str {$/;"	f
boundary	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn boundary(&self) -> &str {$/;"	f
box_forwarded_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	d
build	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn build(self) -> ::Result<Client> {$/;"	f
build	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn build(self) -> ::Result<Request> {$/;"	f
build	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn build(self) -> ::Result<Client> {$/;"	f
build	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn build(self) -> ::Result<Request> {$/;"	f
build_generics	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn build_generics(cont: &Container, borrowed: &BorrowedLifetimes) -> syn::Generics {$/;"	f
build_generics	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn build_generics(cont: &Container) -> syn::Generics {$/;"	f
builder	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn builder() -> ClientBuilder {$/;"	f
builder	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn builder() -> ClientBuilder {$/;"	f
bye	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn bye() -> () {$/;"	f
byte_offset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/iter.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn byte_offset(&self) -> usize;$/;"	f
bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn bytes<T>(value: T) -> Part$/;"	f
bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn bytes<T>(value: T) -> Part$/;"	f
call	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn call<D: Dst>(&self, uri: &D) -> Option<ProxyScheme> {$/;"	f
call_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, _arg: A) -> Self::Key {$/;"	f
call_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key {$/;"	f
call_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key;$/;"	f
card_query_and_print	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn card_query_and_print(api_key: &str, card_id: i32) -> Result<(), Box<Error>> {$/;"	f
card_sub_select	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn card_sub_select(api_key: &str, id: i32) -> () {$/;"	f
cards_pipe_selection	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn cards_pipe_selection(api_key: &str, pipe_id: i32) -> () {$/;"	f
cartesian_product	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn cartesian_product<I, J>(mut i: I, j: J) -> Product<I, J>$/;"	f
cartesian_product	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn cartesian_product<J>(self, other: J) -> Product<Self, J::IntoIter>$/;"	f
cause	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn cause(&self) -> Option<&Error> {$/;"	f
cause	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^            fn cause(&self) -> Option<&StdError> {$/;"	f
cause	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn cause(&self) -> Option<&dyn StdError> {$/;"	f
cause	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    fn cause(&self) -> Option<&error::Error> {$/;"	f
cautious	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub fn cautious(hint: Option<usize>) -> usize {$/;"	f
certificate_from_der_invalid	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn certificate_from_der_invalid() {$/;"	f
certificate_from_pem_invalid	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn certificate_from_pem_invalid() {$/;"	f
chain	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn chain<I, J>(i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>$/;"	f
check	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^    pub fn check(&self, line: usize) -> RangeCheckResult {$/;"	f
check	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^pub fn check(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ctxt.rs	/^    pub fn check(self) -> Result<(), Vec<syn::Error>> {$/;"	f
check_adjacent_tag_conflict	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_adjacent_tag_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_array_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn check_array_mut<T: AsMut<[Item]>, Item>() {}$/;"	f
check_array_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn check_array_ref<T: AsRef<[Item]>, Item>() {}$/;"	f
check_flatten	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_flatten(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {$/;"	f
check_getter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_getter(cx: &Ctxt, cont: &Container) {$/;"	f
check_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_identifier(cx: &Ctxt, cont: &Container) {$/;"	f
check_internal_tag_field_name_conflict	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_internal_tag_field_name_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^        fn check_mut<T: AsMut<$t>>() {}$/;"	f
check_recursion	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^macro_rules! check_recursion {$/;"	d
check_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^        fn check_ref<T: AsRef<$t>>() {}$/;"	f
check_t	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^macro_rules! check_t {$/;"	d
check_transparent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_transparent(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check_variant_skip_attrs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn check_variant_skip_attrs(cx: &Ctxt, cont: &Container) {$/;"	f
chunks	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn chunks(self, size: usize) -> IntoChunks<Self>$/;"	f
clap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.17/src/lib.rs	/^    fn clap<'a, 'b>() -> clap::App<'a, 'b>;$/;"	f
clap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.17/src/lib.rs	/^pub mod clap {$/;"	m
classify	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn classify(&self) -> Category {$/;"	f
clear	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn clear(&mut self, val: bool) -> &mut Checkboxes<'a> {$/;"	f
clear	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn clear(&mut self, val: bool) -> &mut Select<'a> {$/;"	f
clear	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn clear(&mut self) -> io::Result<()> {$/;"	f
clear	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn clear(&mut self) {$/;"	f
clear_preserve_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn clear_preserve_prompt(&mut self, size_vec: &Vec<usize>) -> io::Result<()> {$/;"	f
clear_term	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn clear_term(&self, term: &Term) -> io::Result<()> {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^    fn clone(&self) -> KMerge<I> {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    fn clone(&self) -> RcIter<I> {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^            fn clone(&self) -> Self {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn clone(&self) -> Self {$/;"	f
clone_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^macro_rules! clone_fields {$/;"	d
clone_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^macro_rules! clone_fields {$/;"	d
cloned	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn cloned<'a, I, T: 'a>(iterable: I) -> iter::Cloned<I::IntoIter>$/;"	f
coalesce	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn coalesce<I, F>(mut iter: I, f: F) -> Coalesce<I, F>$/;"	f
coalesce	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn coalesce<F>(self, f: F) -> Coalesce<Self, F>$/;"	f
col	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/iter.rs	/^    pub fn col(&self) -> usize {$/;"	f
collect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn collect<B>(self) -> B$/;"	f
collect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn collect<C>(self) -> C$/;"	f
collect_from_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^            fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	f
collect_from_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	f
collect_from_iter_no_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^            fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	f
collect_from_iter_no_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	f
collect_lifetimes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn collect_lifetimes(ty: &syn::Type, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok>$/;"	f
collect_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn collect_tuple<T>(mut self) -> Option<T>$/;"	f
collect_vec	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn collect_vec(self) -> Vec<Self::Item>$/;"	f
colored	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn colored(theme: &Theme, true_color: bool) -> Self {$/;"	f
column	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn column(&self) -> usize {$/;"	f
combinations	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^pub fn combinations<I>(iter: I, n: usize) -> Combinations<I>$/;"	f
combinations	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn combinations(self, n: usize) -> Combinations<Self>$/;"	f
concat	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/concat_impl.rs	/^pub fn concat<I>(iterable: I) -> I::Item$/;"	f
concat	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn concat(self) -> Self::Item$/;"	f
configure	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    pub fn configure(&self) -> PrettyPrinter {$/;"	f
confirmation_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn confirmation_prompt(&mut self, prompt: &str, default: Option<bool>) -> io::Result<()> {$/;"	f
confirmation_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn confirmation_prompt_selection(&mut self, prompt: &str, sel: bool) -> io::Result<()> {$/;"	f
connect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        macro_rules! connect {$/;"	d
connect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn connect(&self, dst: Destination) -> Self::Future {$/;"	f
connect_async	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        fn connect_async<S>(&self, domain: &str, stream: S) -> ConnectAsync<S>$/;"	f
connect_socks	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn connect_socks(&self, dst: Destination, proxy: ProxyScheme) -> Connecting {$/;"	f
connect_timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn connect_timeout(mut self, timeout: Duration) -> ClientBuilder {$/;"	f
connect_timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn connect_timeout<T>(self, timeout: T) -> ClientBuilder$/;"	f
cons_tuples	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^pub fn cons_tuples<I, J>(iterable: I) -> ConsTuples<I, J>$/;"	f
constrain	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
consume	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn consume(&mut self, amt: usize) {$/;"	f
contains	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn contains(&self, ch: u8) -> bool {$/;"	f
contains_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn contains_key<Q: ?Sized>(&self, key: &Q) -> bool$/;"	f
content	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^mod content {$/;"	m
content	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^mod content {$/;"	m
content_length	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn content_length(&self) -> Option<u64> {$/;"	f
content_length	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn content_length(&self) -> Option<u64> {$/;"	f
cookie_store	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn cookie_store(mut self, enable: bool) -> ClientBuilder {$/;"	f
cookie_store	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn cookie_store(self, enable: bool) -> ClientBuilder {$/;"	f
cookies	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn cookies<'a>(&'a self) -> impl Iterator<Item = cookie::Cookie<'a>> + 'a {$/;"	f
cookies	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn cookies<'a>(&'a self) -> impl Iterator< Item = cookie::Cookie<'a> > + 'a {$/;"	f
copy_to	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn copy_to<W: ?Sized>(&mut self, w: &mut W) -> ::Result<u64>$/;"	f
core	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/lib.rs	/^    mod core {$/;"	m
count	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^    fn count(self) -> usize {$/;"	f
count_new_keys	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^fn count_new_keys<I, K>(mut used: HashMap<K, ()>, iterable: I) -> usize$/;"	f
curr_iterator	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn curr_iterator(&self) -> Vec<I::Item> {$/;"	f
current_tick_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn current_tick_char(&self) -> char {$/;"	f
custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    pub fn custom<F, U: IntoProxyScheme>(fun: F) -> Proxy$/;"	f
custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn custom<T>(policy: T) -> RedirectPolicy$/;"	f
custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	f
custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn custom<T>(_: T) -> Self$/;"	f
custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    fn custom<T: Display>(msg: T) -> Error {$/;"	f
custom_serde_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn custom_serde_path(&self) -> Option<&syn::Path> {$/;"	f
danger_accept_invalid_certs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn danger_accept_invalid_certs(mut self, accept_invalid_certs: bool) -> ClientBuilder {$/;"	f
danger_accept_invalid_certs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn danger_accept_invalid_certs(self, accept_invalid_certs: bool) -> ClientBuilder {$/;"	f
danger_accept_invalid_hostnames	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn danger_accept_invalid_hostnames(mut self, accept_invalid_hostname: bool) -> ClientBuilder {$/;"	f
danger_accept_invalid_hostnames	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn danger_accept_invalid_hostnames(self, accept_invalid_hostname: bool) -> ClientBuilder {$/;"	f
de_bound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
de_lifetime	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn de_lifetime(&self) -> syn::Lifetime {$/;"	f
de_lifetime_def	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn de_lifetime_def(&self) -> Option<syn::LifetimeDef> {$/;"	f
debug_fmt_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/impl_macros.rs	/^macro_rules! debug_fmt_fields {$/;"	d
decide_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn decide_identifier($/;"	f
decide_tag	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn decide_tag($/;"	f
declare_error_trait	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
declare_error_trait	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
decode_hex_escape	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	f
decode_hex_escape	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16>;$/;"	f
decode_hex_val	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^fn decode_hex_val(val: u8) -> Option<u16> {$/;"	f
dedup	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn dedup<I>(mut iter: I) -> Dedup<I>$/;"	f
dedup	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn dedup(self) -> Dedup<Self>$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn default(&mut self, val: bool) -> &mut Confirmation<'a> {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn default(&mut self, value: T) -> &mut Input<'a, T> {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn default(&mut self, val: usize) -> &mut Select<'a> {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn default() -> ColorfulTheme {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn default() -> MultiProgress {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/syntax_mapping.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    fn default() -> Timeout {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    fn default() -> RedirectPolicy {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn default() -> TlsBackend {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn default() -> Self {$/;"	f
default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    fn default() -> Value {$/;"	f
default	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^    fn default() -> Self {$/;"	f
default_bar	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^    pub fn default_bar() -> ProgressStyle {$/;"	f
default_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn default_headers(mut self, headers: HeaderMap) -> ClientBuilder {$/;"	f
default_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn default_headers(self, headers: header::HeaderMap) -> ClientBuilder {$/;"	f
default_spinner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^    pub fn default_spinner() -> ProgressStyle {$/;"	f
delegate_iterator	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^macro_rules! delegate_iterator {$/;"	d
delete	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
delete	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
deny_unknown_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn deny_unknown_fields(&self) -> bool {$/;"	f
deref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn deref() {$/;"	f
deref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	d
deref_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
derive_deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/lib.rs	/^pub fn derive_deserialize(input: TokenStream) -> TokenStream {$/;"	f
derive_serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/lib.rs	/^pub fn derive_serialize(input: TokenStream) -> TokenStream {$/;"	f
description	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^            fn description(&self) -> &str {$/;"	f
description	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^                fn deserialize<__D>(__deserializer: __D) -> #serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^                fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn deserialize<__D>(__deserializer: __D) -> _serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Number, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberFromString, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberKey, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<RawKey, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Value, D::Error>$/;"	f
deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize_adjacently_tagged_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_adjacently_tagged_enum($/;"	f
deserialize_aliases	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn deserialize_aliases(&self) -> Vec<String> {$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^            fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^macro_rules! deserialize_any {$/;"	d
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_custom_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_custom_identifier($/;"	f
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	d
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_enum($/;"	f
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_externally_tagged_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_externally_tagged_enum($/;"	f
deserialize_externally_tagged_newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_externally_tagged_newtype_variant($/;"	f
deserialize_externally_tagged_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_externally_tagged_variant($/;"	f
deserialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_from(type_from: &syn::Type) -> Fragment {$/;"	f
deserialize_generated_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_generated_identifier($/;"	f
deserialize_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^        fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^        fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_identifier($/;"	f
deserialize_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_ignored_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        fn deserialize_in_place<__D>(__deserializer: __D, __place: &mut Self) -> _serde::export::Result<(), __D::Error>$/;"	f
deserialize_in_place_body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_in_place_body(_cont: &Container, _params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_in_place_body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_in_place_body(cont: &Container, params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_integer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_integer_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^macro_rules! deserialize_integer_key {$/;"	d
deserialize_integer_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^macro_rules! deserialize_integer_key {$/;"	d
deserialize_internally_tagged_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_internally_tagged_enum($/;"	f
deserialize_internally_tagged_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_internally_tagged_variant($/;"	f
deserialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_map($/;"	f
deserialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_map_in_place($/;"	f
deserialize_name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn deserialize_name(&self) -> String {$/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_newtype_struct($/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, name: &str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_newtype_struct_in_place(params: &Parameters, field: &Field) -> TokenStream {$/;"	f
deserialize_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^macro_rules! deserialize_number {$/;"	d
deserialize_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	f
deserialize_other	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_prim_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_prim_number<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_prim_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^macro_rules! deserialize_prim_number {$/;"	d
deserialize_prim_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^macro_rules! deserialize_prim_number {$/;"	d
deserialize_raw_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_raw_value<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_seq($/;"	f
deserialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_seq_in_place($/;"	f
deserialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_struct($/;"	f
deserialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct_as_map_visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_struct_as_map_visitor($/;"	f
deserialize_struct_as_struct_in_place_visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_struct_as_struct_in_place_visitor($/;"	f
deserialize_struct_as_struct_visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_struct_as_struct_visitor($/;"	f
deserialize_struct_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_struct_in_place($/;"	f
deserialize_transparent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_tuple($/;"	f
deserialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	f
deserialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple_in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_tuple_in_place($/;"	f
deserialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^        fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^        fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_unit_struct(params: &Parameters, cattrs: &attr::Container) -> Fragment {$/;"	f
deserialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn deserialize_unit_struct<V>($/;"	f
deserialize_untagged_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_untagged_enum($/;"	f
deserialize_untagged_newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_untagged_newtype_variant($/;"	f
deserialize_untagged_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn deserialize_untagged_variant($/;"	f
deserialize_value_ref_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^macro_rules! deserialize_value_ref_number {$/;"	d
deserialize_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
diff_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/diff.rs	/^pub fn diff_with<I, J, F>(i: I, j: J, is_equal: F)$/;"	f
disable_recursion_limit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn disable_recursion_limit(&mut self) {$/;"	f
disable_steady_tick	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn disable_steady_tick(&self) {$/;"	f
discard	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn discard(&mut self) {$/;"	f
discard	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn discard(&mut self);$/;"	f
dns_threads	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn dns_threads(self, _threads: usize) -> ClientBuilder {$/;"	f
domain	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn domain(&self) -> Option<&str> {$/;"	f
draw	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn draw(&self) -> io::Result<()> {$/;"	f
draw_state	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^fn draw_state(state: &Arc<RwLock<ProgressState>>) -> io::Result<()> {$/;"	f
draw_to_term	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn draw_to_term(&self, term: &Term) -> io::Result<()> {$/;"	f
drop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/output.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ctxt.rs	/^    fn drop(&mut self) {$/;"	f
drop_group	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn drop_group(&mut self, client: usize) {$/;"	f
drop_group	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn drop_group(&self, client: usize) {$/;"	f
dropping	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn dropping(mut self, n: usize) -> Self$/;"	f
dropping_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn dropping_back(mut self, n: usize) -> Self$/;"	f
duplicate_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn duplicate_field(field: &'static str) -> Self {$/;"	f
duplicate_for_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^    pub fn duplicate_for_key<'b>(&self, key: &'b str) -> TemplateVar<'b> {$/;"	f
duration_to_secs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^pub fn duration_to_secs(d: Duration) -> f64 {$/;"	f
eat_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn eat_char(&mut self) {$/;"	f
edit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^    pub fn edit(&self, s: &str) -> io::Result<Option<String>> {$/;"	f
either	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn either<F, G, T>(self, f: F, g: G) -> T$/;"	f
either	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^macro_rules! either {$/;"	d
either_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn either_with<Ctx, F, G, T>(self, ctx: Ctx, f: F, g: G) -> T$/;"	f
empty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    pub fn empty() -> Decoder {$/;"	f
enable_steady_tick	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn enable_steady_tick(&self, ms: u64) {$/;"	f
encode	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn end(&mut self) -> Result<()> {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn end(self) -> Result<()> {$/;"	f
end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn end(self) -> Result<Value, Error> {$/;"	f
end_array	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn end_array<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
end_array_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn end_array_value<W: ?Sized>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn end_map(&mut self) -> Result<()> {$/;"	f
end_object	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn end_object<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
end_object_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn end_object_key<W: ?Sized>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_object_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn end_object_value<W: ?Sized>(&mut self, _writer: &mut W) -> io::Result<()>$/;"	f
end_raw_buffering	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
end_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn end_seq(&mut self) -> Result<()> {$/;"	f
end_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn end_string<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
entry	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn entry<S>(&mut self, key: S) -> Entry$/;"	f
enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        struct enum identifier ignored_any$/;"	s
enum_from_ast	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^fn enum_from_ast<'a>($/;"	f
enumerate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn enumerate<I>(iterable: I) -> iter::Enumerate<I::IntoIter>$/;"	f
eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^                fn eq(&self, other: &$ty) -> bool {$/;"	f
eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^                fn eq(&self, other: &Value) -> bool {$/;"	f
eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	f
eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	f
eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^    fn eq(&self, other: &Value) -> bool {$/;"	f
eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	f
eq_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^fn eq_bool(value: &Value, other: bool) -> bool {$/;"	f
eq_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^fn eq_f64(value: &Value, other: f64) -> bool {$/;"	f
eq_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^fn eq_i64(value: &Value, other: i64) -> bool {$/;"	f
eq_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^fn eq_str(value: &Value, other: &str) -> bool {$/;"	f
eq_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^fn eq_u64(value: &Value, other: u64) -> bool {$/;"	f
equal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^pub fn equal<I, J>(a: I, b: J) -> bool$/;"	f
error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn error(&mut self, err: &str) -> io::Result<()> {$/;"	f
error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn error() {$/;"	f
error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn error(&self, reason: ErrorCode) -> Error {$/;"	f
error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^fn error<'de, R: ?Sized + Read<'de>, T>(read: &R, reason: ErrorCode) -> Result<T> {$/;"	f
error_for_status	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn error_for_status(self) -> ::Result<Self> {$/;"	f
error_for_status	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn error_for_status(self) -> ::Result<Self> {$/;"	f
error_for_status_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn error_for_status_ref(&self) -> ::Result<&Self> {$/;"	f
error_for_status_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn error_for_status_ref(&self) -> ::Result<&Self> {$/;"	f
error_spanned_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ctxt.rs	/^    pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {$/;"	f
errors	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^mod errors {$/;"	m
eta	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn eta(&self) -> Duration {$/;"	f
event_loop_panicked	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^fn event_loop_panicked() -> ! {$/;"	f
executable	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^    pub fn executable<S: AsRef<OsStr>>(&mut self, val: S) -> &mut Editor {$/;"	f
execute	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn execute(&self, request: Request) -> impl Future<Item = Response, Error = ::Error> {$/;"	f
execute	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn execute(&self, request: Request) -> ::Result<Response> {$/;"	f
execute_request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    fn execute_request(&self, req: Request) -> ::Result<Response> {$/;"	f
expand_derive_deserialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^pub fn expand_derive_deserialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expand_derive_serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^pub fn expand_derive_serialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expand_tabs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/preprocessor.rs	/^pub fn expand_tabs(line: &str, width: usize, cursor: &mut usize) -> String {$/;"	f
expand_template	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^pub fn expand_template<F: Fn(&TemplateVar) -> String>(s: &str, f: F) -> Cow<'_, str> {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expires	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn expires(&self) -> Option<SystemTime> {$/;"	f
expr_is_missing	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn expr_is_missing(field: &Field, cattrs: &attr::Container) -> Fragment {$/;"	f
extend	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
extend	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
extend	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
extension	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^    pub fn extension(&mut self, val: &str) -> &mut Editor {$/;"	f
f64_from_parts	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn f64_from_parts($/;"	f
factor_first	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn factor_first(self) -> (T, Either<L, R>) {$/;"	f
factor_second	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn factor_second(self) -> (Either<L, R>, T) {$/;"	f
field_i	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn field_i(i: usize) -> Ident {$/;"	f
fields_from_ast	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^fn fields_from_ast<'a>($/;"	f
file	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    pub fn file<T: Into<String>>(&self, filename: T) -> Result<()> {$/;"	f
file	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn file<T, U>(self, name: T, path: U) -> io::Result<Form>$/;"	f
file	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn file<T: AsRef<Path>>(path: T) -> io::Result<Part> {$/;"	f
file_name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn file_name<T>(self, filename: T) -> Part$/;"	f
file_name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn file_name<T>(self, filename: T) -> Part$/;"	f
fill_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn fill_buf(&mut self) -> io::Result<&[u8]> {$/;"	f
find_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn find_position<P>(&mut self, mut pred: P) -> Option<(usize, Self::Item)>$/;"	f
finish	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn finish(&self) {$/;"	f
finish_and_clear	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn finish_and_clear(&self) {$/;"	f
finish_with_message	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn finish_with_message(&self, msg: &str) {$/;"	f
fix_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn fix_position(&self, err: Error) -> Error {$/;"	f
fix_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn fix_position<F>(self, f: F) -> Self$/;"	f
flatten	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn flatten(&self) -> bool {$/;"	f
flip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn flip(self) -> Either<R, L> {$/;"	f
flush	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/impl_macros.rs	/^        fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt_request_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^fn fmt_request_fields<'a, 'b>(f: &'a mut fmt::DebugStruct<'a, 'b>, req: &Request) -> &'a mut fmt::DebugStruct<'a, 'b> {$/;"	f
fmt_request_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^fn fmt_request_fields<'a, 'b>(f: &'a mut fmt::DebugStruct<'a, 'b>, req: &Request) -> &'a mut fmt::DebugStruct<'a, 'b> {$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn fold<Acc, G>(self, init: Acc, f: G) -> Acc$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn fold<Acc, Fold>(self, init: Acc, mut fold_f: Fold) -> Acc$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^            fn fold<Acc, Fold>(self, accum: Acc, mut f: Fold) -> Acc$/;"	f
fold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn fold<I, B, F>(iterable: I, init: B, f: F) -> B$/;"	f
fold1	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn fold1<F>(mut self, f: F) -> Option<Self::Item>$/;"	f
fold_options	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn fold_options<A, B, F>(&mut self, mut start: B, mut f: F) -> Option<B>$/;"	f
fold_results	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn fold_results<A, E, B, F>(&mut self, mut start: B, mut f: F) -> Result<B, E>$/;"	f
fold_while	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn fold_while<B, F>(&mut self, init: B, mut f: F) -> FoldWhile<B>$/;"	f
follow	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn follow(self) -> RedirectAction {$/;"	f
foreach	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn foreach<F>(self, f: F)$/;"	f
form	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn form<T: Serialize + ?Sized>(mut self, form: &T) -> RequestBuilder {$/;"	f
form	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn form<T: Serialize + ?Sized>(mut self, form: &T) -> RequestBuilder {$/;"	f
form_empty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn form_empty() {$/;"	f
form_empty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn form_empty() {$/;"	f
format	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^    fn format<F>(&self, f: &mut fmt::Formatter, mut cb: F) -> fmt::Result$/;"	f
format	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn format(self, sep: &str) -> Format<Self>$/;"	f
format_confirmation_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_confirmation_prompt($/;"	f
format_confirmation_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_confirmation_prompt_selection($/;"	f
format_error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_error(&self, f: &mut fmt::Write, err: &str) -> fmt::Result {$/;"	f
format_escaped_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^fn format_escaped_str<W: ?Sized, F: ?Sized>($/;"	f
format_escaped_str_contents	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^fn format_escaped_str_contents<W: ?Sized, F: ?Sized>($/;"	f
format_filename	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn format_filename(&self, filename: &str) -> String {$/;"	f
format_multi_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_multi_prompt_selection($/;"	f
format_parameter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn format_parameter(&self, name: &str, value: &str) -> String {$/;"	f
format_password_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_password_prompt_selection(&self, f: &mut fmt::Write, prompt: &str) -> fmt::Result {$/;"	f
format_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_prompt(&self, f: &mut fmt::Write, prompt: &str) -> fmt::Result {$/;"	f
format_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_selection($/;"	f
format_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_selection(&self, f: &mut fmt::Write, text: &str, st: SelectionStyle) -> fmt::Result {$/;"	f
format_single_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_single_prompt_selection($/;"	f
format_singleline_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn format_singleline_prompt($/;"	f
format_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn format_with<F>(self, sep: &str, format: F) -> FormatWith<Self, F>$/;"	f
forward_to_deserialize_any	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	d
forward_to_deserialize_any_helper	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	d
forward_to_deserialize_any_method	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	d
forward_to_deserialize_other	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	d
forwarded_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	d
fraction	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn fraction(&self) -> f32 {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn from(r: Result<R, L>) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^            fn from(iter: I) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^            fn from(mut iter: I) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn from(iter: I) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs	/^            fn from(t: ($($B,)*)) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    fn from(printer: &PrettyPrint) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^    pub fn from(range_raw: &str) -> Result<LineRange> {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^    pub fn from(ranges: Vec<LineRange>) -> LineRanges {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn from(bytes: Bytes) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn from(s: &'static [u8]) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn from(s: &'static str) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn from(s: String) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn from(vec: Vec<u8>) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^  fn from(val: Chunk) -> hyper::Chunk {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    fn from(r: http::Response<T>) -> Response {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn from(f: File) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn from(s: &'static [u8]) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn from(s: &'static str) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn from(s: String) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn from(v: Vec<u8>) -> Body {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(_err: ::tokio::timer::Error) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::http::Error) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::hyper::Error) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::mime::FromStrError) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::native_tls::Error) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::rustls::TLSError) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::serde_json::Error) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::serde_urlencoded::ser::Error) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::url::ParseError) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: ::wait::Waited<T>) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(err: io::Error) -> Kind {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(other: InternalFrom<Error>) -> Error {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn from(other: InternalFrom<T>) -> Error {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    fn from(r: http::Response<T>) -> Response {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/wait.rs	/^    fn from(err: E) -> Waited<E> {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    fn from(j: Error) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^                fn from(i: $ty) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^                fn from(u: $ty) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^        fn from(i: i128) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^        fn from(u: u128) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn from(value: ParserNumber) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^                fn from(n: $ty) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: &'a [T]) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: &str) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: Cow<'a, str>) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: Map<String, Value>) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: String) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: Vec<T>) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: bool) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: f32) -> Self {$/;"	f
from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from(f: f64) -> Self {$/;"	f
from_args	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.17/src/lib.rs	/^    fn from_args() -> Self$/;"	f
from_ast	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^    pub fn from_ast($/;"	f
from_ast	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn from_ast($/;"	f
from_ast	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, item: &syn::DeriveInput) -> Self {$/;"	f
from_ast	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, variant: &syn::Variant) -> Self {$/;"	f
from_attrs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn from_attrs($/;"	f
from_binary	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^    fn from_binary() -> Self {$/;"	f
from_borrowed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn from_borrowed(json: &str) -> &Self {$/;"	f
from_bounds	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f
from_cache	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^    fn from_cache() -> Result<Self> {$/;"	f
from_clap	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.17/src/lib.rs	/^    fn from_clap(&clap::ArgMatches) -> Self;$/;"	f
from_der	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    pub fn from_der(der: &[u8]) -> ::Result<Certificate> {$/;"	f
from_escape_table	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn from_escape_table(escape: u8, byte: u8) -> CharEscape {$/;"	f
from_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn from_f64(f: f64) -> Option<Number> {$/;"	f
from_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_i16(n: i16) -> Option<Self>;$/;"	f
from_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_i32(n: i32) -> Option<Self>;$/;"	f
from_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	f
from_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_i8(n: i8) -> Option<Self>;$/;"	f
from_integer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^macro_rules! from_integer {$/;"	d
from_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn from_iter<T>(iter: T) -> Self$/;"	f
from_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/from.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {$/;"	f
from_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.17/src/lib.rs	/^    fn from_iter<I>(iter: I) -> Self$/;"	f
from_iter_safe	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.17/src/lib.rs	/^    fn from_iter_safe<I>(iter: I) -> Result<Self, clap::Error>$/;"	f
from_mode	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/output.rs	/^    pub fn from_mode(mode: PagingMode, pager: Option<String>) -> Result<Self> {$/;"	f
from_owned	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn from_owned(json: Box<str>) -> Box<Self> {$/;"	f
from_pem	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    pub fn from_pem(buf: &[u8]) -> ::Result<Identity> {$/;"	f
from_pem	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    pub fn from_pem(pem: &[u8]) -> ::Result<Certificate> {$/;"	f
from_pkcs12_der	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    pub fn from_pkcs12_der(der: &[u8], password: &str) -> ::Result<Identity> {$/;"	f
from_reader	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn from_reader(reader: R) -> Self {$/;"	f
from_reader	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^pub fn from_reader<R, T>(rdr: R) -> Result<T>$/;"	f
from_slice	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn from_slice(bytes: &'a [u8]) -> Self {$/;"	f
from_slice	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^pub fn from_slice<'a, T>(v: &'a [u8]) -> Result<T>$/;"	f
from_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^    fn from_str(s: &str) -> Result<Self> {$/;"	f
from_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/case.rs	/^    fn from_str(rename_all_str: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn from_str(s: &str) -> result::Result<Self, Self::Err> {$/;"	f
from_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn from_str(s: &'a str) -> Self {$/;"	f
from_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^pub fn from_str<'a, T>(s: &'a str) -> Result<T>$/;"	f
from_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn from_str(s: &str) -> Result<Value, Error> {$/;"	f
from_str	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^fn from_str<'de, T, D>(deserializer: D) -> Result<T, D::Error>$/;"	f
from_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    pub fn from_string(json: String) -> Result<Box<Self>, Error> {$/;"	f
from_string_unchecked	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn from_string_unchecked(n: String) -> Self {$/;"	f
from_trait	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^fn from_trait<'de, R, T>(read: R) -> Result<T>$/;"	f
from_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_u16(n: u16) -> Option<Self>;$/;"	f
from_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_u32(n: u32) -> Option<Self>;$/;"	f
from_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	f
from_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^            fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^        fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^    fn from_u8(n: u8) -> Option<Self>;$/;"	f
from_utf8_lossy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f
from_utf8_lossy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f
from_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^pub fn from_value<T>(value: Value) -> Result<T, Error>$/;"	f
generate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^    fn generate($/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/lib.rs	/^pub fn get<T: IntoUrl>(url: T) -> ::Result<Response> {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn get(&self) -> bool {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn get(self) -> Option<T> {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn get(self) -> Vec<T> {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn get(&self) -> &Value {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn get<Q: ?Sized>(&self, key: &Q) -> Option<&Value>$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    pub fn get(&self) -> &str {$/;"	f
get	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn get<I: Index>(&self, index: I) -> Option<&Value> {$/;"	f
get_api_key	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^fn get_api_key() -> String {$/;"	f
get_default_editor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^fn get_default_editor() -> OsString {$/;"	f
get_final_tick_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^    pub fn get_final_tick_char(&self) -> char {$/;"	f
get_integrated_syntaxset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^    fn get_integrated_syntaxset() -> SyntaxSet {$/;"	f
get_integrated_themeset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^    fn get_integrated_themeset() -> ThemeSet {$/;"	f
get_lit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn get_lit_str<'a>($/;"	f
get_member	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {$/;"	f
get_multiple_renames	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn get_multiple_renames<'a>($/;"	f
get_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut Value {$/;"	f
get_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn get_mut<Q: ?Sized>(&mut self, key: &Q) -> Option<&mut Value>$/;"	f
get_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn get_mut<I: Index>(&mut self, index: I) -> Option<&mut Value> {$/;"	f
get_next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    pub fn get_next(&mut self) -> bool {$/;"	f
get_output_components	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    fn get_output_components(&self) -> OutputComponents {$/;"	f
get_reader	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/inputfile.rs	/^    pub fn get_reader(&self) -> Result<InputFileReader> {$/;"	f
get_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn get_ref(&self) -> Option<&(dyn StdError + Send + Sync + 'static)> {$/;"	f
get_renames	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn get_renames<'a>($/;"	f
get_ser_and_de	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn get_ser_and_de<'a, 'b, T, F>($/;"	f
get_serde_meta_items	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^pub fn get_serde_meta_items(attr: &syn::Attribute) -> Option<Vec<syn::NestedMeta>> {$/;"	f
get_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/confy-0.3.1/src/utils.rs	/^    fn get_string(&mut self) -> Result<String, IoError> {$/;"	f
get_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/confy-0.3.1/src/utils.rs	/^    fn get_string(&mut self) -> Result<String, IoError>;$/;"	f
get_syntax	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^    pub fn get_syntax($/;"	f
get_theme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^    pub fn get_theme(&self, theme: &str) -> &Theme {$/;"	f
get_themes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    pub fn get_themes(&self) -> BTreeMap<String, Theme> {$/;"	f
get_tick_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^    pub fn get_tick_char(&self, idx: u64) -> char {$/;"	f
get_where_predicates	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn get_where_predicates($/;"	f
get_with_tokens	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn get_with_tokens(self) -> Option<(TokenStream, T)> {$/;"	f
get_working_api_key	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^pub fn get_working_api_key() -> User {$/;"	f
getter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn getter(&self) -> Option<&syn::ExprPath> {$/;"	f
glob	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/quicli-0.4.0/src/fs.rs	/^pub fn glob(patterns: &str) -> Result<Vec<PathBuf>, Error> {$/;"	f
grid	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^    pub fn grid(&self) -> bool {$/;"	f
group_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn group_by<K, F>(self, key: F) -> GroupBy<K, Self, F>$/;"	f
group_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn group_key(&mut self, client: usize) -> K {$/;"	f
gzip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn gzip(mut self, enable: bool) -> ClientBuilder {$/;"	f
gzip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn gzip(body: Body) -> Decoder {$/;"	f
gzip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn gzip(self, enable: bool) -> ClientBuilder {$/;"	f
h2_prior_knowledge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn h2_prior_knowledge(mut self) -> ClientBuilder {$/;"	f
h2_prior_knowledge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn h2_prior_knowledge(self) -> ClientBuilder {$/;"	f
handle	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/output.rs	/^    pub fn handle(&mut self) -> Result<&mut Write> {$/;"	f
has_flatten	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn has_flatten(&self) -> bool {$/;"	f
has_getter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^    pub fn has_getter(&self) -> bool {$/;"	f
has_left	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs	/^    pub fn has_left(&self) -> bool {$/;"	f
has_right	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs	/^    pub fn has_right(&self) -> bool {$/;"	f
head	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
head	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^    pub fn header(&self) -> bool {$/;"	f
header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn header<K, V>(mut self, key: K, value: V) -> RequestBuilder$/;"	f
header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn header<K, V>(mut self, key: K, value: V) -> RequestBuilder$/;"	f
header_011	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn header_011<H>(self, header: H) -> RequestBuilder$/;"	f
header_011	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn header_011<H>(self, header: H) -> RequestBuilder$/;"	f
header_percent_encoding	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn header_percent_encoding() {$/;"	f
headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	f
headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn headers(mut self, headers: ::header::HeaderMap) -> RequestBuilder {$/;"	f
headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	f
headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	f
headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn headers(mut self, headers: ::header::HeaderMap) -> RequestBuilder {$/;"	f
headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	f
headers_011	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn headers_011(self, headers: ::hyper_011::Headers) -> RequestBuilder {$/;"	f
headers_011	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn headers_011(self, headers: ::hyper_011::Headers) -> RequestBuilder {$/;"	f
headers_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	f
headers_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	f
headers_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	f
heapify	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^fn heapify<T, S>(data: &mut [T], mut less_than: S)$/;"	f
helper	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f
hidden	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn hidden() -> ProgressBar {$/;"	f
hidden	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn hidden() -> ProgressDrawTarget {$/;"	f
host	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^        fn host(&self) -> &str {$/;"	f
host	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn host(&self) -> &str {$/;"	f
host	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn host(&self) -> &str;$/;"	f
http	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn http<T: IntoUrl>(url: T) -> ::Result<Self> {$/;"	f
http	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    pub fn http<U: IntoProxyScheme>(proxy_scheme: U) -> ::Result<Proxy> {$/;"	f
http1_title_case_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn http1_title_case_headers(mut self) -> ClientBuilder {$/;"	f
http1_title_case_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn http1_title_case_headers(self) -> ClientBuilder {$/;"	f
http_connector	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^fn http_connector() -> ::Result<HttpConnector> {$/;"	f
http_only	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn http_only(&self) -> bool {$/;"	f
https	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    pub fn https<U: IntoProxyScheme>(proxy_scheme: U) -> ::Result<Proxy> {$/;"	f
identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn identifier(&self) -> Identifier {$/;"	f
identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^        struct identifier ignored_any$/;"	s
identity	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn identity(mut self, identity: Identity) -> ClientBuilder {$/;"	f
identity	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn identity(self, identity: Identity) -> ClientBuilder {$/;"	f
identity_from_pem_invalid	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn identity_from_pem_invalid() {$/;"	f
identity_from_pem_pkcs1_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn identity_from_pem_pkcs1_key() {$/;"	f
identity_from_pkcs12_der_invalid	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn identity_from_pkcs12_der_invalid() {$/;"	f
if_checking_recursion_limit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^macro_rules! if_checking_recursion_limit {$/;"	d
ignore_decimal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn ignore_decimal(&mut self) -> Result<()> {$/;"	f
ignore_escape	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^fn ignore_escape<'de, R: ?Sized + Read<'de>>(read: &mut R) -> Result<()> {$/;"	f
ignore_exponent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn ignore_exponent(&mut self) -> Result<()> {$/;"	f
ignore_integer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn ignore_integer(&mut self) -> Result<()> {$/;"	f
ignore_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	f
ignore_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()>;$/;"	f
ignore_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn ignore_value(&mut self) -> Result<()> {$/;"	f
impl_cons_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^macro_rules! impl_cons_iter($/;"	d
impl_copy_clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	d
impl_deserialize_num	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	d
impl_format	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^macro_rules! impl_format {$/;"	d
impl_from_primitive_for_float	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_float {$/;"	d
impl_from_primitive_for_int	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_int {$/;"	d
impl_from_primitive_for_uint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_uint {$/;"	d
impl_from_signed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^macro_rules! impl_from_signed {$/;"	d
impl_from_unsigned	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^macro_rules! impl_from_unsigned {$/;"	d
impl_specific_ref_and_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^macro_rules! impl_specific_ref_and_mut {$/;"	d
impl_tuple_collect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^macro_rules! impl_tuple_collect {$/;"	d
impl_tuple_combination	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^macro_rules! impl_tuple_combination {$/;"	d
impl_zip_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs	/^macro_rules! impl_zip_iter {$/;"	d
in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn in_place(self) -> InPlaceImplGenerics<'a> {$/;"	f
in_place	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn in_place(self) -> InPlaceTypeGenerics<'a> {$/;"	f
in_progress	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn in_progress(&self) -> bool {$/;"	f
inc	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn inc(&self, delta: u64) {$/;"	f
indent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^fn indent<W: ?Sized>(wr: &mut W, n: usize, s: &[u8]) -> io::Result<()>$/;"	f
index	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    fn index<'b>(&'b self, _index: usize) -> &'b I::Item {$/;"	f
index	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn index(&self, index: &Q) -> &Value {$/;"	f
index	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index(&self, index: I) -> &Value {$/;"	f
index_into	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	f
index_into	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value>;$/;"	f
index_into_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	f
index_into_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value>;$/;"	f
index_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn index_mut(&mut self, index: &Q) -> &mut Value {$/;"	f
index_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index_mut(&mut self, index: I) -> &mut Value {$/;"	f
index_or_insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	f
index_or_insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value;$/;"	f
inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^        fn inner<T, II, FF>(stop: usize, it: &mut II, f: &mut FF) -> State<T>$/;"	f
inner0	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^        fn inner0<T, II, FF>(it: &mut II, f: &mut FF) -> State<T>$/;"	f
input_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn input_prompt(&mut self, prompt: &str, default: Option<&str>) -> io::Result<()> {$/;"	f
insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/syntax_mapping.rs	/^    pub fn insert(&mut self, from: String, to: String) -> Option<String> {$/;"	f
insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn insert<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn insert(&mut self, k: String, v: Value) -> Option<Value> {$/;"	f
insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn insert(&mut self, value: Value) -> Value {$/;"	f
insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn insert(self, value: Value) -> &'a mut Value {$/;"	f
int_to_int	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^macro_rules! int_to_int {$/;"	d
int_to_uint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^macro_rules! int_to_uint {$/;"	d
interact	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn interact(&self) -> io::Result<String> {$/;"	f
interact	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn interact(&self) -> io::Result<T> {$/;"	f
interact	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn interact(&self) -> io::Result<bool> {$/;"	f
interact	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn interact(&self) -> io::Result<Vec<usize>> {$/;"	f
interact	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn interact(&self) -> io::Result<usize> {$/;"	f
interact_on	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn interact_on(&self, term: &Term) -> io::Result<String> {$/;"	f
interact_on	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn interact_on(&self, term: &Term) -> io::Result<T> {$/;"	f
interact_on	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn interact_on(&self, term: &Term) -> io::Result<bool> {$/;"	f
interact_on	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn interact_on(&self, term: &Term) -> io::Result<Vec<usize>> {$/;"	f
interact_on	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn interact_on(&self, term: &Term) -> io::Result<usize> {$/;"	f
interact_on_opt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn interact_on_opt(&self, term: &Term) -> io::Result<Option<usize>> {$/;"	f
interact_opt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn interact_opt(&self) -> io::Result<Option<usize>> {$/;"	f
intercepted_uri	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn intercepted_uri(p: &Proxy, s: &str) -> Uri {$/;"	f
interleave	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn interleave<I, J>(i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>$/;"	f
interleave	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn interleave<J>(self, other: J) -> Interleave<Self, J::IntoIter>$/;"	f
interleave_shortest	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn interleave_shortest<I, J>(a: I, b: J) -> InterleaveShortest<I, J>$/;"	f
interleave_shortest	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn interleave_shortest<J>(self, other: J) -> InterleaveShortest<Self, J::IntoIter>$/;"	f
intersperse	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs	/^pub fn intersperse<I>(iter: I, elt: I::Item) -> Intersperse<I>$/;"	f
intersperse	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	f
into	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn into(self) -> Result<R, L> {$/;"	f
into_body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn into_body(self) -> Decoder {$/;"	f
into_buffer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    pub fn into_buffer(self) -> TupleBuffer<T> {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^            fn into_deserializer(self) -> $name<E> {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f
into_group_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/group_map.rs	/^pub fn into_group_map<I, K, V>(iter: I) -> HashMap<K, Vec<V>>$/;"	f
into_group_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn into_group_map<K, V>(self) -> HashMap<K, Vec<V>>$/;"	f
into_inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn into_iter(self) -> Either<L::IntoIter, R::IntoIter>$/;"	f
into_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    fn into_iter(self) -> RcIter<I> {$/;"	f
into_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn into_iter<T>(self) -> StreamDeserializer<'de, R, T>$/;"	f
into_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn into_mut(self) -> &'a mut Value {$/;"	f
into_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs	/^    pub fn into_option(self) -> Option<(T,T)> {$/;"	f
into_parts	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    pub fn into_parts(self) -> (Option<I::Item>, I) {$/;"	f
into_proxy_scheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn into_proxy_scheme(self) -> ::Result<ProxyScheme> {$/;"	f
into_proxy_scheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn into_proxy_scheme(self) -> ::Result<ProxyScheme>;$/;"	f
into_url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/into_url.rs	/^    fn into_url(self) -> ::Result<Url> {$/;"	f
into_url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/into_url.rs	/^    fn into_url(self) -> ::Result<Url>;$/;"	f
into_url_file_scheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/into_url.rs	/^    fn into_url_file_scheme() {$/;"	f
invalid_length	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn invalid_length(len: usize, exp: &Expected) -> Self {$/;"	f
invalid_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_raw_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_raw_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn invalid_type(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
invalid_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f
invalid_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn invalid_type(self, exp: &Expected) -> Error {$/;"	f
invalid_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    fn invalid_type(unexp: de::Unexpected, exp: &de::Expected) -> Self {$/;"	f
invalid_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn invalid_type<E>(&self, exp: &Expected) -> E$/;"	f
invalid_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn invalid_value(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
io	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn io(error: io::Error) -> Self {$/;"	f
io_error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^        fn io_error<E>(_: E) -> io::Error {$/;"	f
io_timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^fn io_timeout() -> io::Error {$/;"	f
iproduct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^macro_rules! iproduct {$/;"	d
is_array	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_array(&self) -> bool {$/;"	f
is_boolean	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_boolean(&self) -> bool {$/;"	f
is_client_error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn is_client_error(&self) -> bool {$/;"	f
is_cow	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_cow(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_data	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn is_data(&self) -> bool {$/;"	f
is_done	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn is_done(&self) -> bool {$/;"	f
is_done	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_empty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_eof	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn is_eof(&self) -> bool {$/;"	f
is_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn is_f64(&self) -> bool {$/;"	f
is_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_f64(&self) -> bool {$/;"	f
is_finished	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn is_finished(&self) -> bool {$/;"	f
is_hidden	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn is_hidden(&self) -> bool {$/;"	f
is_http	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn is_http(&self) -> bool {$/;"	f
is_human_readable	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_human_readable	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn is_i64(&self) -> bool {$/;"	f
is_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_i64(&self) -> bool {$/;"	f
is_implicitly_borrowed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_implicitly_borrowed(ty: &syn::Type) -> bool {$/;"	f
is_implicitly_borrowed_reference	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_implicitly_borrowed_reference(ty: &syn::Type) -> bool {$/;"	f
is_inside	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^    pub fn is_inside(&self, line: usize) -> bool {$/;"	f
is_io	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn is_io(&self) -> bool {$/;"	f
is_left	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn is_left(&self) -> bool {$/;"	f
is_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_null	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_null(&self) -> bool {$/;"	f
is_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_number(&self) -> bool {$/;"	f
is_object	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_object(&self) -> bool {$/;"	f
is_option	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_option(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_primitive_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {$/;"	f
is_primitive_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_primitive_type(ty: &syn::Type, primitive: &str) -> bool {$/;"	f
is_redirect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn is_redirect(&self) -> bool {$/;"	f
is_reference	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_reference(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_right	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn is_right(&self) -> bool {$/;"	f
is_serialization	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn is_serialization(&self) -> bool {$/;"	f
is_server_error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn is_server_error(&self) -> bool {$/;"	f
is_slice_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_slice_u8(ty: &syn::Type) -> bool {$/;"	f
is_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn is_some(self) -> bool {$/;"	f
is_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn is_str(_: &str) {}$/;"	f
is_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn is_str(ty: &syn::Type) -> bool {$/;"	f
is_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_string(&self) -> bool {$/;"	f
is_syntax	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn is_syntax(&self) -> bool {$/;"	f
is_timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn is_timeout(&self) -> bool {$/;"	f
is_truecolor_terminal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^fn is_truecolor_terminal() -> bool {$/;"	f
is_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn is_u64(&self) -> bool {$/;"	f
is_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn is_u64(&self) -> bool {$/;"	f
is_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn is_unit(variant: &Variant) -> bool {$/;"	f
it_can_print_multiple_times	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^    fn it_can_print_multiple_times() {$/;"	f
it_can_wrap_a_reader	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn it_can_wrap_a_reader() {$/;"	f
it_can_wrap_an_iterator	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn it_can_wrap_an_iterator() {$/;"	f
it_works	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^    fn it_works() {$/;"	f
it_works_inside_closure	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^    fn it_works_inside_closure() {$/;"	f
it_works_inside_loop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^    fn it_works_inside_loop() {$/;"	f
it_works_with_output_opts	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^    fn it_works_with_output_opts() {$/;"	f
item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn item(&mut self, item: &str) -> &mut Checkboxes<'a> {$/;"	f
item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn item(&mut self, item: &str) -> &mut Select<'a> {$/;"	f
items	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn items(&mut self, items: &[&str]) -> &mut Checkboxes<'a> {$/;"	f
items	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn items<T: ToString>(&mut self, items: &[T]) -> &mut Select<'a> {$/;"	f
iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn iter() {$/;"	f
iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn iter(&self) -> Iter {$/;"	f
iter_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut {$/;"	f
iterate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn iterate(&mut self) {$/;"	f
iterate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^pub fn iterate<St, F>(initial_value: St, f: F) -> Iterate<St, F>$/;"	f
iterate_last	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn iterate_last($/;"	f
iterator_len_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
izip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^macro_rules! izip {$/;"	d
join	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn join(&self) -> io::Result<()> {$/;"	f
join	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn join<I>(iterable: I, sep: &str) -> String$/;"	f
join	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn join(&mut self, sep: &str) -> String$/;"	f
join_and_clear	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn join_and_clear(&self) -> io::Result<()> {$/;"	f
join_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn join_impl(&self, clear: bool) -> io::Result<()> {$/;"	f
json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn json<T: Serialize + ?Sized>(mut self, json: &T) -> RequestBuilder {$/;"	f
json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn json<T: DeserializeOwned>(&mut self) -> impl Future<Item = T, Error = ::Error> {$/;"	f
json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn json<T: Serialize + ?Sized>(mut self, json: &T) -> RequestBuilder {$/;"	f
json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn json<T: DeserializeOwned>(&mut self) -> ::Result<T> {$/;"	f
json	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/macros.rs	/^macro_rules! json {$/;"	d
json_internal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/macros.rs	/^macro_rules! json_internal {$/;"	d
json_internal_vec	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/macros.rs	/^macro_rules! json_internal_vec {$/;"	d
json_unexpected	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/macros.rs	/^macro_rules! json_unexpected {$/;"	d
key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	f
key_must_be_a_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
key_must_be_a_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
keys	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn keys(&self) -> Keys {$/;"	f
kmerge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^pub fn kmerge<I>(iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>$/;"	f
kmerge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn kmerge(self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>$/;"	f
kmerge_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^pub fn kmerge_by<I, F>(iterable: I, mut less_than: F)$/;"	f
kmerge_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn kmerge_by<F>(self, first: F)$/;"	f
last	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
left	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn left(self) -> Option<L> {$/;"	f
left	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs	/^    pub fn left(self) -> Option<A> {$/;"	f
left_and_then	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn left_and_then<F, S>(self, f: F) -> Either<S, R>$/;"	f
left_or	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn left_or(self, other: L) -> L {$/;"	f
left_or_default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn left_or_default(self) -> L$/;"	f
left_or_else	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn left_or_else<F>(self, f: F) -> L$/;"	f
left_shift_push	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^            fn left_shift_push(&mut self, item: $A) {$/;"	f
left_shift_push	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn left_shift_push(&mut self, item: Self::Item);$/;"	f
len	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	f
len_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn len_hint(&self) -> Option<usize> {$/;"	f
len_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn len_hint(&self) -> Option<usize>;$/;"	f
lib	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/lib.rs	/^mod lib {$/;"	m
limited	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn limited(max: usize) -> RedirectPolicy {$/;"	f
line	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn line(&self) -> usize {$/;"	f
line	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/iter.rs	/^    pub fn line(&self) -> usize {$/;"	f
load	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/confy-0.3.1/src/lib.rs	/^pub fn load<T: Serialize + DeserializeOwned + Default>(name: &str) -> Result<T, IoError> {$/;"	f
local_address	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn local_address<T>(mut self, addr: T) -> ClientBuilder$/;"	f
local_address	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn local_address<T>(self, addr: T) -> ClientBuilder$/;"	f
lookup_buffer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn lookup_buffer(&mut self, client: usize) -> Option<I::Item> {$/;"	f
loop_detected	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn loop_detected(self) -> RedirectAction {$/;"	f
macros	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn macros() {$/;"	f
main	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn main() -> CliResult {$/;"	f
main_select	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn main_select<'a>() -> (i32, i32) {$/;"	f
make_error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^fn make_error(mut msg: String) -> Error {$/;"	f
make_referer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^fn make_referer(next: &Url, previous: &Url) -> Option<HeaderValue> {$/;"	f
map_as_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f
map_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! map_impl {$/;"	d
map_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	d
map_into	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn map_into<I, R>(iter: I) -> MapInto<I, R> {$/;"	f
map_into	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn map_into<R>(self) -> MapInto<Self, R>$/;"	f
map_left	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn map_left<F, M>(self, f: F) -> Either<M, R>$/;"	f
map_results	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn map_results<I, F, T, U, E>(iter: I, f: F) -> MapResults<I, F>$/;"	f
map_results	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn map_results<F, T, U, E>(self, f: F) -> MapResults<Self, F>$/;"	f
map_right	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn map_right<F, S>(self, f: F) -> Either<L, S>$/;"	f
mark_has_flatten	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn mark_has_flatten(&mut self) {$/;"	f
mark_transparent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn mark_transparent(&mut self) {$/;"	f
max	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn max<I>(iterable: I) -> Option<I::Item>$/;"	f
max	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub fn max(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
max_age	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn max_age(&self) -> Option<std::time::Duration> {$/;"	f
max_idle_per_host	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn max_idle_per_host(mut self, max: usize) -> ClientBuilder {$/;"	f
max_idle_per_host	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn max_idle_per_host(self, max: usize) -> ClientBuilder {$/;"	f
me_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn me_query(api_key: &str) -> Result<User, Box<Error>> {$/;"	f
mem_size_of	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn mem_size_of() {$/;"	f
member_message	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/check.rs	/^fn member_message(member: &Member) -> String {$/;"	f
merge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn merge<I, J>(i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>$/;"	f
merge	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn merge<J>(self, other: J) -> Merge<Self, J::IntoIter>$/;"	f
merge_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn merge_by<J, F>(self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>$/;"	f
merge_by_new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn merge_by_new<I, J, F>(a: I, b: J, cmp: F) -> MergeBy<I, J, F>$/;"	f
merge_join_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn merge_join_by<J, F>(self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>$/;"	f
merge_join_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs	/^pub fn merge_join_by<I, J, F>(left: I, right: J, cmp_fn: F)$/;"	f
message	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn message(&self) -> &str {$/;"	f
metadata	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn metadata(&self) -> &PartMetadata {$/;"	f
metadata	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn metadata(&self) -> &PartMetadata;$/;"	f
metadata	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn metadata(&self) -> &PartMetadata {$/;"	f
method	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn method(&self) -> &Method {$/;"	f
method	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn method(&self) -> &Method {$/;"	f
method_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn method_mut(&mut self) -> &mut Method {$/;"	f
method_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn method_mut(&mut self) -> &mut Method {$/;"	f
mime	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn mime(self, mime: Mime) -> Part {$/;"	f
mime	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn mime(self, mime: Mime) -> Part {$/;"	f
mime_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn mime_str(self, mime: &str) -> ::Result<Part> {$/;"	f
mime_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn mime_str(self, mime: &str) -> ::Result<Part> {$/;"	f
min	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn min<I>(iterable: I) -> Option<I::Item>$/;"	f
min	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub fn min(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
minmax	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn minmax(self) -> MinMaxResult<Self::Item>$/;"	f
minmax_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn minmax_by<F>(self, mut compare: F) -> MinMaxResult<Self::Item>$/;"	f
minmax_by_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn minmax_by_key<K, F>(self, key: F) -> MinMaxResult<Self::Item>$/;"	f
minmax_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/minmax.rs	/^pub fn minmax_impl<I, K, F, L>(mut it: I, mut key_for: F,$/;"	f
missing_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn missing_field(field: &'static str) -> Self {$/;"	f
missing_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
mock_tunnel	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    macro_rules! mock_tunnel {$/;"	d
move_cursor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn move_cursor(&self, term: &Term) -> io::Result<()> {$/;"	f
mul	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub fn mul(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mul_scalar	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub fn mul_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
multi_cartesian_product	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^pub fn multi_cartesian_product<H>(iters: H) -> MultiProduct<<H::Item as IntoIterator>::IntoIter>$/;"	f
multi_cartesian_product	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn multi_cartesian_product(self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>$/;"	f
multi_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn multi_prompt_selection(&mut self, prompt: &str, selections: &[&str]) -> io::Result<()> {$/;"	f
multipart	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn multipart(self, mut multipart: multipart::Form) -> RequestBuilder {$/;"	f
multipart	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn multipart(self, mut multipart: ::multipart::Form) -> RequestBuilder {$/;"	f
multipeek	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^pub fn multipeek<I>(iterable: I) -> MultiPeek<I::IntoIter>$/;"	f
multizip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs	/^pub fn multizip<T, U>(t: U) -> Zip<T>$/;"	f
mut_if	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn mut_if(is_mut: bool) -> Option<TokenStream> {$/;"	f
name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn name(&self) -> &str {$/;"	f
name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	f
native_tls_async	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^mod native_tls_async {$/;"	m
needs_deserialize_bound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn needs_deserialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
needs_serialize_bound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn needs_serialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^    pub fn new() -> Editor {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn new() -> Confirmation<'static> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn new() -> Input<'static, T> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn new() -> PasswordInput<'static> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn new() -> Checkboxes<'static> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn new() -> Select<'static> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn new(character: char) -> CustomPromptCharacterTheme {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn new(term: &'a Term, theme: &'a Theme) -> TermThemeRenderer<'a> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn new() -> MultiProgress {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn new(len: u64) -> ProgressBar {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^    pub fn new() -> Estimate {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn new(iter: I) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    pub fn new(it: I) -> LazyBuffer<I> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn new(size: usize) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub fn new<K, J, F>(iter: J, f: F) -> GroupBy<K, J::IntoIter, F>$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^    fn new(mut it: I) -> Option<HeadTail<I>> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs	/^pub fn new<I>(iter: I) -> (Tee<I>, Tee<I>)$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn new(buf: T::Buffer) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^    pub fn new(colors: &Colors) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/inputfile.rs	/^    fn new<R: BufRead + 'a>(mut reader: R) -> InputFileReader<'a> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^    pub fn new() -> LineRange {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    pub fn new($/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/syntax_mapping.rs	/^    pub fn new() -> SyntaxMapping {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn new() -> Client {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn new() -> ClientBuilder {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn new(stream: ReadableChunks<Body>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn new(value: Body) -> Part {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn new() -> Form {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn new(method: Method, url: Url) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    pub fn new<R: Read + Send + 'static>(reader: R) -> Body {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    fn new(builder: ClientBuilder) -> ::Result<ClientHandle> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn new() -> Client {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn new() -> ClientBuilder {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn new<N, V>(name: N, value: V) -> Self$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn new(kind: Kind, url: Option<Url>) -> Error {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn new(form: Form) -> Reader {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn new(value: Body) -> Part {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn new() -> Form {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn new(intercept: Intercept) -> Proxy {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn new(method: Method, url: Url) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn new() -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> BorrowedBytesDeserializer<'de, E> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn new() -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        pub fn new(name: &'static str) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, E> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn new($/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ctxt.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    pub fn new(read: R) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/iter.rs	/^    pub fn new(iter: I) -> LineColIterator<I> {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    pub fn new(reader: R) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    pub fn new(s: &'a str) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    pub fn new(slice: &'a [u8]) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    pub fn new(writer: W) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn new(map: &'de Map<String, Value>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn new(map: Map<String, Value>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn new(slice: &'de [Value]) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn new(value: Cow<'de, str>) -> Self {$/;"	f
new	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn new(vec: Vec<Value>) -> Self {$/;"	f
new	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^    fn new() -> Unauthorized {$/;"	f
new	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^    fn new() -> InvalidAPIKey {$/;"	f
new_chunks	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^pub fn new_chunks<J>(iter: J, size: usize) -> IntoChunks<J::IntoIter>$/;"	f
new_format	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^pub fn new_format<'a, I, F>(iter: I, separator: &'a str, f: F) -> FormatWith<'a, I, F>$/;"	f
new_format_default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/format.rs	/^pub fn new_format_default<'a, I>(iter: I, separator: &'a str) -> Format<'a, I>$/;"	f
new_spinner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn new_spinner() -> ProgressBar {$/;"	f
newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Error>$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^            fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<(I::Item, J::Item)> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<B> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<R> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/combinations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^            fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs	/^            fn next(&mut self) -> Option<Self::Item>$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/wait.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn next(&mut self) -> Option<Result<T>> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/iter.rs	/^    fn next(&mut self) -> Option<io::Result<u8>> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	f
next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>>;$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^            fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn next_char(&mut self) -> Result<Option<u8>> {$/;"	f
next_char_or_null	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn next_char_or_null(&mut self) -> Result<u8> {$/;"	f
next_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn next_element(&mut self) -> Option<I::Item> {$/;"	f
next_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>>$/;"	f
next_element_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	f
next_entry	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	f
next_key_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	f
next_or_eof	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^fn next_or_eof<'de, R: ?Sized + Read<'de>>(read: &mut R) -> Result<u8> {$/;"	f
next_pair	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_reader	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn next_reader(&mut self) {$/;"	f
next_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn next_tuple<T>(&mut self) -> Option<T>$/;"	f
next_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	f
next_value_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Error>$/;"	f
next_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut f: F) -> Option<I::Item>$/;"	f
next_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut less_than: F) -> Option<I::Item>$/;"	f
none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn none() -> RedirectPolicy {$/;"	f
none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: &'static str) -> Self {$/;"	f
nonzero_integers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nonzero_integers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nop_reserve	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
normalize_empty_query	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn normalize_empty_query() {$/;"	f
normalize_empty_query	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn normalize_empty_query() {$/;"	f
notify	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/wait.rs	/^    fn notify(&self, _id: usize) {$/;"	f
nth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn nth(&mut self, n: usize) -> Option<Self::Item> {$/;"	f
num_items	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^            fn num_items() -> usize {$/;"	f
num_items	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn num_items() -> usize;$/;"	f
numbers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/style.rs	/^    pub fn numbers(&self) -> bool {$/;"	f
or_insert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn or_insert(self, default: Value) -> &'a mut Value {$/;"	f
or_insert_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn or_insert_with<F>(self, default: F) -> &'a mut Value$/;"	f
org_members_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn org_members_query(api_key: &str, org_id: i32) -> Result<(), Box<Error>> {$/;"	f
org_pipes_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn org_pipes_query(api_key: &str, org_id: i32) -> Result<(), Box<Error>> {$/;"	f
organization_name_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn organization_name_query(api_key: &str, org_id: i32) -> Result<(), Box<Error>> {$/;"	f
organization_sub_select	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn organization_sub_select<'a>(api_key: &str, company_id: i32) -> () {$/;"	f
other	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn other(&self) -> bool {$/;"	f
overflow	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^macro_rules! overflow {$/;"	d
pad_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^pub fn pad_str(s: &str, width: usize, align: Alignment, truncate: bool) -> Cow<'_, str> {$/;"	f
pad_using	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn pad_using<F>(self, min: usize, f: F) -> PadUsing<Self, F>$/;"	f
pad_using	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs	/^pub fn pad_using<I, F>(iter: I, min: usize, filler: F) -> PadUsing<I, F>$/;"	f
paged	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn paged(&mut self, val: bool) -> &mut Checkboxes<'a> {$/;"	f
paged	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn paged(&mut self, val: bool) -> &mut Select<'a> {$/;"	f
parse	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    fn parse(value: &'a ::header::HeaderValue) -> Result<Cookie<'a>, CookieParseError> {$/;"	f
parse	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn parse(url: Url) -> ::Result<Self> {$/;"	f
parse	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^        fn parse(input: ParseStream) -> parse::Result<Self> {$/;"	f
parse_any_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_any_number(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	f
parse_any_signed_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_any_signed_number(&mut self) -> Result<ParserNumber> {$/;"	f
parse_decimal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_decimal($/;"	f
parse_escape	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^fn parse_escape<'de, R: Read<'de>>(read: &mut R, scratch: &mut Vec<u8>) -> Result<()> {$/;"	f
parse_exponent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_exponent($/;"	f
parse_exponent_overflow	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_exponent_overflow($/;"	f
parse_ident	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_ident(&mut self, ident: &[u8]) -> Result<()> {$/;"	f
parse_index	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^fn parse_index(s: &str) -> Option<usize> {$/;"	f
parse_integer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_integer(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	f
parse_ip_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	d
parse_line_col	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^fn parse_line_col(msg: &mut String) -> Option<(usize, usize)> {$/;"	f
parse_lit_into_expr_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn parse_lit_into_expr_path($/;"	f
parse_lit_into_lifetimes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn parse_lit_into_lifetimes($/;"	f
parse_lit_into_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn parse_lit_into_path(cx: &Ctxt, attr_name: &Ident, lit: &syn::Lit) -> Result<syn::Path, ()> {$/;"	f
parse_lit_into_ty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn parse_lit_into_ty(cx: &Ctxt, attr_name: &Ident, lit: &syn::Lit) -> Result<syn::Type, ()> {$/;"	f
parse_lit_into_where	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn parse_lit_into_where($/;"	f
parse_lit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn parse_lit_str<T>(s: &syn::LitStr) -> parse::Result<T>$/;"	f
parse_long_integer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_long_integer($/;"	f
parse_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_number(&mut self, positive: bool, significand: u64) -> Result<ParserNumber> {$/;"	f
parse_object_colon	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_object_colon(&mut self) -> Result<()> {$/;"	f
parse_range	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^    pub fn parse_range(range_raw: &str) -> Result<LineRange> {$/;"	f
parse_socket_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	d
parse_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'a, 's, str>> {$/;"	f
parse_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>> {$/;"	f
parse_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>>;$/;"	f
parse_str_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn parse_str_bytes<'s, T, F>($/;"	f
parse_str_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn parse_str_bytes<'s, T: ?Sized, F>($/;"	f
parse_str_raw	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn parse_str_raw<'s>($/;"	f
parse_whitespace	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn parse_whitespace(&mut self) -> Result<Option<u8>> {$/;"	f
part	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn part<T>(self, name: T, part: Part) -> Form$/;"	f
part	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn part<T>(self, name: T, part: Part) -> Form$/;"	f
partialeq_numeric	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/partial_eq.rs	/^macro_rules! partialeq_numeric {$/;"	d
partition	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^pub fn partition<'a, A: 'a, I, F>(iter: I, mut pred: F) -> usize$/;"	f
partition_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn partition_map<A, B, F, L, R>(self, predicate: F) -> (A, B)$/;"	f
password_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn password_prompt(&mut self, prompt: &str) -> io::Result<()> {$/;"	f
password_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn password_prompt_selection(&mut self, prompt: &str) -> io::Result<()> {$/;"	f
patch	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
patch	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn path(&self) -> Option<&str> {$/;"	f
peek	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	f
peek	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>>;$/;"	f
peek_end_of_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn peek_end_of_value(&mut self) -> Result<()> {$/;"	f
peek_error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn peek_error(&self, reason: ErrorCode) -> Error {$/;"	f
peek_invalid_type	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn peek_invalid_type(&mut self, exp: &Expected) -> Error {$/;"	f
peek_or_null	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn peek_or_null(&mut self) -> Result<u8> {$/;"	f
peek_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	f
peek_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn peek_position(&self) -> Position;$/;"	f
peeking_next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^            fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next_by_clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^macro_rules! peeking_next_by_clone {$/;"	d
peeking_take_while	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn peeking_take_while<F>(&mut self, accept: F) -> PeekingTakeWhile<Self, F>$/;"	f
peeking_take_while	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^pub fn peeking_take_while<I, F>(iter: &mut I, f: F) -> PeekingTakeWhile<I, F>$/;"	f
percent_encode_attr_chars	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn percent_encode_attr_chars(self) -> Form {$/;"	f
percent_encode_attr_chars	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn percent_encode_attr_chars(self) -> Form {$/;"	f
percent_encode_noop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn percent_encode_noop(self) -> Form {$/;"	f
percent_encode_noop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn percent_encode_noop(self) -> Form {$/;"	f
percent_encode_path_segment	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn percent_encode_path_segment(self) -> Form {$/;"	f
percent_encode_path_segment	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn percent_encode_path_segment(self) -> Form {$/;"	f
perform_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^fn perform_query(api_key: &str, query: HashMap<&str, String>) -> Result<String, reqwest::Error> {$/;"	f
phases_pipe_selection	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn phases_pipe_selection(api_key: &str, pipe_id: i32) -> () {$/;"	f
pipe_cards_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn pipe_cards_query(api_key: &str, pipe_id: i32) -> Result<(), Box<Error>> {$/;"	f
pipe_cards_select	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn pipe_cards_select(api_key: &str, pipe_id: i32) -> Result<Vec<CardNode>, Box<Error>> {$/;"	f
pipe_name_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn pipe_name_query(api_key: &str, pipe_id: i32) -> Result<(), Box<Error>> {$/;"	f
pipe_phases_query	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^pub fn pipe_phases_query(api_key: &str, pipe_id: i32) -> Result<(), Box<Error>> {$/;"	f
pipe_sub_select	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn pipe_sub_select<'a>(api_key: &str, pipe_id: i32) -> () {$/;"	f
place_lifetime	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn place_lifetime() -> syn::LifetimeDef {$/;"	f
plain	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn plain() -> Self {$/;"	f
plain_text	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn plain_text(body: Body) -> Decoder {$/;"	f
pointer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn pointer<'a>(&'a self, pointer: &str) -> Option<&'a Value> {$/;"	f
pointer_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn pointer_mut<'a>(&'a mut self, pointer: &str) -> Option<&'a mut Value> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        fn poll(&mut self) -> Poll<TlsStream<S>, Error> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll_stream	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn poll_stream(&mut self) -> Poll<StreamState, error::Error> {$/;"	f
port	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^        fn port(&self) -> Option<u16> {$/;"	f
port	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn port(&self) -> Option<u16> {$/;"	f
port	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn port(&self) -> Option<u16>;$/;"	f
position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn position(&self) -> (u64, u64) {$/;"	f
position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn position(&self) -> Position {$/;"	f
position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn position(&self) -> Position;$/;"	f
position_of_index	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^    fn position_of_index(&self, i: usize) -> Position {$/;"	f
positions	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn positions<I, F>(iter: I, f: F) -> Positions<I, F>$/;"	f
positions	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn positions<P>(self, predicate: P) -> Positions<Self, P>$/;"	f
post	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
post	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
precondition	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_no_de_lifetime	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn precondition_no_de_lifetime(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_sized	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn precondition_sized(cx: &Ctxt, cont: &Container) {$/;"	f
prefix	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn prefix(&self) -> &str {$/;"	f
prelude	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/quicli-0.4.0/src/lib.rs	/^pub mod prelude {$/;"	m
prepare_enum_variant_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn prepare_enum_variant_enum($/;"	f
preprocess	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn preprocess(&self, text: &str, cursor: &mut usize) -> String {$/;"	f
pretend_fields_used	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/pretend.rs	/^fn pretend_fields_used(cont: &Container) -> TokenStream {$/;"	f
pretend_used	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/pretend.rs	/^pub fn pretend_used(cont: &Container) -> TokenStream {$/;"	f
pretend_variants_used	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/pretend.rs	/^fn pretend_variants_used(cont: &Container) -> TokenStream {$/;"	f
pretty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    pub fn pretty(writer: W) -> Self {$/;"	f
previous	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn previous(&self) -> &[Url] {$/;"	f
primitive_deserializer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	d
primitive_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	d
print_file	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    fn print_file<'a, P: Printer>($/;"	f
print_file_ranges	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    fn print_file_ranges<'a, P: Printer>($/;"	f
print_footer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn print_footer(&mut self, handle: &mut Write) -> Result<()> {$/;"	f
print_footer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn print_footer(&mut self, handle: &mut Write) -> Result<()>;$/;"	f
print_header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn print_header($/;"	f
print_horizontal_line	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn print_horizontal_line(&mut self, handle: &mut Write, grid_char: char) -> Result<()> {$/;"	f
print_line	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/printer.rs	/^    fn print_line($/;"	f
println	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn println<I: Into<String>>(&self, msg: I) {$/;"	f
private	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^mod private {$/;"	m
private	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/read.rs	/^mod private {$/;"	m
private	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/index.rs	/^mod private {$/;"	m
process_results	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs	/^pub fn process_results<I, F, T, E, R>(iterable: I, processor: F) -> Result<R, E>$/;"	f
progress_bar_sync_send	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn progress_bar_sync_send() {$/;"	f
progress_chars	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^    pub fn progress_chars(mut self, s: &str) -> ProgressStyle {$/;"	f
prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn prompt(&mut self, prompt: &str) -> io::Result<()> {$/;"	f
prompt_password	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    fn prompt_password(&self, render: &mut TermThemeRenderer, prompt: &str) -> io::Result<String> {$/;"	f
propagate_array_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn propagate_array_mut<T1: AsMut<[Item]>, T2: AsMut<[Item]>, Item>() {$/;"	f
propagate_array_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn propagate_array_ref<T1: AsRef<[Item]>, T2: AsRef<[Item]>, Item>() {$/;"	f
propagate_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^        fn propagate_mut<T1: AsMut<$t>, T2: AsMut<$t>>() {$/;"	f
propagate_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^        fn propagate_ref<T1: AsRef<$t>, T2: AsRef<$t>>() {$/;"	f
proxy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn proxy(mut self, proxy: Proxy) -> ClientBuilder {$/;"	f
proxy	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn proxy(self, proxy: Proxy) -> ClientBuilder {$/;"	f
proxy_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    fn proxy_auth(&self, dst: &Uri, headers: &mut HeaderMap) {$/;"	f
push_next_group	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn push_next_group(&mut self, group: Vec<I::Item>) {$/;"	f
put	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
put	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	f
put_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn put_back<I>(iterable: I) -> PutBack<I::IntoIter>$/;"	f
put_back	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back_n	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs	/^pub fn put_back_n<I>(iterable: I) -> PutBackN<I::IntoIter>$/;"	f
query	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn query<T: Serialize + ?Sized>(mut self, query: &T) -> RequestBuilder {$/;"	f
query	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn query<T: Serialize + ?Sized>(mut self, query: &T) -> RequestBuilder {$/;"	f
quote_block	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^macro_rules! quote_block {$/;"	d
quote_expr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^macro_rules! quote_expr {$/;"	d
range	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^mod range {$/;"	m
ranges	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn ranges(rs: &[&str]) -> LineRanges {$/;"	f
rciter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^pub fn rciter<I>(iterable: I) -> RcIter<I::IntoIter>$/;"	f
read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/decoder.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read_file	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/quicli-0.4.0/src/fs.rs	/^pub fn read_file<P: AsRef<Path>>(path: P) -> Result<String, Error> {$/;"	f
read_line	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/inputfile.rs	/^    pub fn read_line(&mut self, buf: &mut Vec<u8>) -> io::Result<bool> {$/;"	f
read_to_end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn read_to_end(&mut self, buf: &mut Vec<u8>) -> io::Result<usize> {$/;"	f
read_to_end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn read_to_end() {$/;"	f
read_to_end_with_header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn read_to_end_with_header() {$/;"	f
read_to_end_with_length	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn read_to_end_with_length() {$/;"	f
read_write	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^fn read_write() {$/;"	f
reader	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn reader<T: Read + Send + 'static>(value: T) -> Part {$/;"	f
reader_with_length	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn reader_with_length<T: Read + Send + 'static>(value: T, length: u64) -> Part {$/;"	f
record_step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^    pub fn record_step(&mut self, value: u64) {$/;"	f
redirect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn redirect(mut self, policy: RedirectPolicy) -> ClientBuilder {$/;"	f
redirect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn redirect(self, policy: RedirectPolicy) -> ClientBuilder {$/;"	f
redirect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    fn redirect(&self, next: &Url, previous: &[Url]) -> ::Result<bool> {$/;"	f
redirect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    fn redirect(&self, next: &Url, previous: &[Url]) -> ::Result<bool>;$/;"	f
redirect	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn redirect(&self, attempt: RedirectAttempt) -> RedirectAction {$/;"	f
reexports	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/quicli-0.4.0/src/lib.rs	/^mod reexports {$/;"	m
ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^        static ref KEY_RE: Regex = Regex::new($/;"	c
ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^        static ref VAR_RE: Regex = Regex::new(r"(\\}\\})|\\{(\\{|[^}]+\\})").unwrap();$/;"	c
ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/dirs.rs	/^    pub static ref PROJECT_DIRS: ProjectDirs =$/;"	c
referer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn referer(mut self, enable: bool) -> ClientBuilder {$/;"	f
referer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn referer(self, enable: bool) -> ClientBuilder {$/;"	f
remaining	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/body.rs	/^    fn remaining(&self) -> usize {$/;"	f
remote	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn remote(&self) -> Option<&syn::Path> {$/;"	f
remote_addr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn remote_addr(&self) -> Option<SocketAddr> {$/;"	f
remote_addr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn remote_addr(&self) -> Option<SocketAddr> {$/;"	f
remove	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn remove(self) -> Value {$/;"	f
remove	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn remove<Q: ?Sized>(&mut self, key: &Q) -> Option<Value>$/;"	f
rename_all_rules	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	f
rename_by_rules	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	f
rename_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/case.rs	/^fn rename_fields() {$/;"	f
rename_variants	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/case.rs	/^fn rename_variants() {$/;"	f
repeat_call	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^pub fn repeat_call<F, A>(function: F) -> RepeatCall<F>$/;"	f
repeat_n	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs	/^pub fn repeat_n<A>(element: A, n: usize) -> RepeatN<A>$/;"	f
replace	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/syntax_mapping.rs	/^    pub fn replace<'a>(&self, input: &'a str) -> Cow<'a, str> {$/;"	f
replace_nonprintable	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/preprocessor.rs	/^pub fn replace_nonprintable(input: &str, tab_width: usize) -> String {$/;"	f
replacement	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/try.rs	/^pub fn replacement() -> TokenStream {$/;"	f
request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	f
request	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	f
require_save	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^    pub fn require_save(&mut self, val: bool) -> &mut Editor {$/;"	f
requires_default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn requires_default(field: &attr::Field, _variant: Option<&attr::Variant>) -> bool {$/;"	f
reset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^    pub fn reset(&mut self) {$/;"	f
reset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn reset(&mut self) {$/;"	f
reset_eta	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn reset_eta(&self) {$/;"	f
reset_peek	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^    pub fn reset_peek(&mut self) {$/;"	f
resolve	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/dns.rs	/^    fn resolve(&self, name: hyper_dns::Name) -> Self::Future {$/;"	f
respan_token_stream	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn respan_token_stream(stream: TokenStream, span: Span) -> TokenStream {$/;"	f
respan_token_tree	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn respan_token_tree(mut token: TokenTree, span: Span) -> TokenTree {$/;"	f
rev	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn rev<I>(iterable: I) -> iter::Rev<I::IntoIter>$/;"	f
right	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn right(self) -> Option<R> {$/;"	f
right	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/either_or_both.rs	/^    pub fn right(self) -> Option<B> {$/;"	f
right_and_then	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn right_and_then<F, S>(self, f: F) -> Either<L, S>$/;"	f
right_or	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn right_or(self, other: R) -> R {$/;"	f
right_or_default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn right_or_default(self) -> R$/;"	f
right_or_else	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    pub fn right_or_else<F>(self, f: F) -> R$/;"	f
roundtrip_io_error	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn roundtrip_io_error() {$/;"	f
run_controller	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    fn run_controller($/;"	f
same_site_lax	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn same_site_lax(&self) -> bool {$/;"	f
same_site_strict	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn same_site_strict(&self) -> bool {$/;"	f
scan_decimal	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn scan_decimal(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_exponent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn scan_exponent(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_integer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn scan_integer(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_integer128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^        fn scan_integer128(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_number	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn scan_number(&mut self, buf: &mut String) -> Result<()> {$/;"	f
scan_or_null	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn scan_or_null(&mut self, buf: &mut String) -> Result<u8> {$/;"	f
scheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^        fn scheme(&self) -> &str {$/;"	f
scheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn scheme(&self) -> &str {$/;"	f
scheme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn scheme(&self) -> &str;$/;"	f
sealed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    mod sealed {$/;"	m
secs_to_duration	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^pub fn secs_to_duration(s: f64) -> Duration {$/;"	f
secure	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn secure(&self) -> bool {$/;"	f
selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn selection(&mut self, text: &str, style: SelectionStyle) -> io::Result<()> {$/;"	f
send	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn send(self) -> impl Future<Item = Response, Error = ::Error> {$/;"	f
send	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn send(self) -> ::Result<::Response> {$/;"	f
seq_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	d
seq_impl	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	d
ser_bound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
serde_if_integer128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	d
serde_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn serde_path(&self) -> Cow<syn::Path> {$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^            fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^            fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/macros.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^                fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^                    fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^                fn serialize<__S>(&self, __serializer: __S) -> #serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^            fn serialize<__S>(&self, __s: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^            fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize_adjacently_tagged_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_adjacently_tagged_variant($/;"	f
serialize_body	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Self::Ok> {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<()> {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<()> {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<Value, Error> {$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Self::Ok> {$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Value, Error> {$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Self::Ok> {$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_char(self, value: char) -> Result<()> {$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<Value, Error> {$/;"	f
serialize_display_bounded_length	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	d
serialize_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^    fn serialize_element(&self, span: Span) -> TokenStream {$/;"	f
serialize_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_element	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_entry	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f
serialize_entry	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_enum(params: &Parameters, variants: &[Variant], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_externally_tagged_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_externally_tagged_variant($/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Self::Ok> {$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<()> {$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<()> {$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<Value, Error> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Self::Ok> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<()> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<()> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<Value, Error> {$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^    fn serialize_field(&self, span: Span) -> TokenStream {$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^        fn serialize_i128(self, v: i128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^        fn serialize_i128(self, _v: i128) -> Result<Self::Ok> {$/;"	f
serialize_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^        fn serialize_i128(self, value: i128) -> Result<()> {$/;"	f
serialize_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^        fn serialize_i128(self, value: i128) -> Result<Value, Error> {$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Self::Ok> {$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<()> {$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<Value, Error> {$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Self::Ok> {$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<()> {$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<Value, Error> {$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Self::Ok> {$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<()> {$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<Value, Error> {$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Self::Ok> {$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<()> {$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<Value, Error> {$/;"	f
serialize_internally_tagged_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_internally_tagged_variant($/;"	f
serialize_into	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_into(params: &Parameters, type_into: &syn::Type) -> Fragment {$/;"	f
serialize_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f
serialize_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, Error> {$/;"	f
serialize_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn serialize_name(&self) -> String {$/;"	f
serialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_newtype_struct($/;"	f
serialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> Result<()>$/;"	f
serialize_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f
serialize_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	f
serialize_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok> {$/;"	f
serialize_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value, Error> {$/;"	f
serialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f
serialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	f
serialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Error> {$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<()>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<Self::Ok>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<()>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Value, Error>$/;"	f
serialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f
serialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	f
serialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Self::Ok> {$/;"	f
serialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value, Error> {$/;"	f
serialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_struct($/;"	f
serialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_struct(params: &Parameters, fields: &[Field], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct_as_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_struct_as_map($/;"	f
serialize_struct_as_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_struct_as_struct($/;"	f
serialize_struct_tag_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_struct_tag_field(cattrs: &attr::Container, struct_trait: &StructTrait) -> TokenStream {$/;"	f
serialize_struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_struct_variant<'a>($/;"	f
serialize_struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant_with_flatten	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_struct_variant_with_flatten<'a>($/;"	f
serialize_struct_visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_struct_visitor($/;"	f
serialize_tagged_newtype	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_transparent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f
serialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	f
serialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Error> {$/;"	f
serialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct_visitor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_tuple_struct_visitor($/;"	f
serialize_tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^        fn serialize_u128(self, v: u128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^        fn serialize_u128(self, _v: u128) -> Result<Self::Ok> {$/;"	f
serialize_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^        fn serialize_u128(self, value: u128) -> Result<()> {$/;"	f
serialize_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^        fn serialize_u128(self, value: u128) -> Result<Value, Error> {$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Self::Ok> {$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<()> {$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<Value, Error> {$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Self::Ok> {$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<()> {$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<Value, Error> {$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Self::Ok> {$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<()> {$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<Value, Error> {$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Self::Ok> {$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<()> {$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<Value, Error> {$/;"	f
serialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f
serialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	f
serialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok> {$/;"	f
serialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value, Error> {$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_unit_struct(cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Self::Ok> {$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value, Error> {$/;"	f
serialize_unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_untagged_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_untagged_variant($/;"	f
serialize_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn serialize_variant($/;"	f
serialize_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
set	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn set<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
set_basic_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn set_basic_auth(&mut self, username: &str, password: &str) {$/;"	f
set_basic_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn set_basic_auth<T: Into<String>, U: Into<String>>(&mut self, username: T, password: U) {$/;"	f
set_draw_delta	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_draw_delta(&self, n: u64) {$/;"	f
set_draw_target	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_draw_target(&self, target: ProgressDrawTarget) {$/;"	f
set_from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn set_from<'a, A: 'a, J>(&mut self, from: J) -> usize$/;"	f
set_if_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn set_if_none(&mut self, value: T) {$/;"	f
set_length	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_length(&self, len: u64) {$/;"	f
set_message	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_message(&self, msg: &str) {$/;"	f
set_move_cursor	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_move_cursor(&self, move_cursor: bool) {$/;"	f
set_opt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn set_opt<A: ToTokens>(&mut self, obj: A, value: Option<T>) {$/;"	f
set_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_position(&self, pos: u64) {$/;"	f
set_prefix	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_prefix(&self, prefix: &str) {$/;"	f
set_prompts_reset_height	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn set_prompts_reset_height(&mut self, val: bool) {$/;"	f
set_style	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn set_style(&self, style: ProgressStyle) {$/;"	f
set_true	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    fn set_true<A: ToTokens>(&mut self, obj: A) {$/;"	f
should_render	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn should_render(&self) -> bool {$/;"	f
show_default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn show_default(&mut self, val: bool) -> &mut Confirmation<'a> {$/;"	f
show_default	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn show_default(&mut self, val: bool) -> &mut Input<'a, T> {$/;"	f
show_themes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^    fn show_themes() {$/;"	f
shutdown	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
sift_down	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^fn sift_down<T, S>(heap: &mut [T], index: usize, mut less_than: S)$/;"	f
single_prompt_selection	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn single_prompt_selection(&mut self, prompt: &str, sel: &str) -> io::Result<()> {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/multi_product.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/cons_tuples_impl.rs	/^            fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/kmerge_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/merge_join.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/multipeek_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/pad_tail.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/peeking_take_while.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/process_results_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/put_back_n_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/rciter_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/repeatn.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tee.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/ziptuple.rs	/^            fn size_hint(&self) -> (usize, Option<usize>)$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^pub mod size_hint {$/;"	m
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
sized	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    pub fn sized<R: Read + Send + 'static>(reader: R, len: u64) -> Body {$/;"	f
skip_deserializing	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	f
skip_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	f
skip_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^    fn skip_field(&self, span: Span) -> Option<TokenStream> {$/;"	f
skip_serializing	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	f
skip_serializing_if	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn skip_serializing_if(&self) -> Option<&syn::ExprPath> {$/;"	f
socks	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^mod socks {$/;"	m
socks5	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn socks5(addr: SocketAddr) -> ::Result<Self> {$/;"	f
socks5h	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn socks5h(addr: SocketAddr) -> ::Result<Self> {$/;"	f
sorted	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn sorted<I>(iterable: I) -> VecIntoIter<I::Item>$/;"	f
sorted	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn sorted(self) -> VecIntoIter<Self::Item>$/;"	f
sorted_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn sorted_by<F>(self, cmp: F) -> VecIntoIter<Self::Item>$/;"	f
sorted_by_key	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn sorted_by_key<K, F>(self, f: F) -> VecIntoIter<Self::Item>$/;"	f
source	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/graphql.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
source	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
spanned_tokens	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn spanned_tokens(s: &syn::LitStr) -> parse::Result<TokenStream> {$/;"	f
split	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	f
split	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	f
split_with_de_lifetime	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn split_with_de_lifetime($/;"	f
starts_with_digit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^fn starts_with_digit(slice: &str) -> bool {$/;"	f
status	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn status(&self) -> StatusCode {$/;"	f
status	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn status(&self) -> Option<StatusCode> {$/;"	f
status	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn status(&self) -> StatusCode {$/;"	f
status	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn status(&self) -> StatusCode {$/;"	f
stderr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn stderr() -> ProgressDrawTarget {$/;"	f
stderr	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/output.rs	/^    fn stderr() -> Self {$/;"	f
stderr_nohz	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn stderr_nohz() -> ProgressDrawTarget {$/;"	f
stdout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn stdout() -> ProgressDrawTarget {$/;"	f
stdout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/output.rs	/^    fn stdout() -> Self {$/;"	f
stdout_nohz	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn stdout_nohz() -> ProgressDrawTarget {$/;"	f
step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn step<I>(iter: I, step: usize) -> Step<I>$/;"	f
step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn step(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item>$/;"	f
step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn step(self, n: usize) -> Step<Self>$/;"	f
step_buffering	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn step_buffering(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step_current	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/groupbylazy.rs	/^    fn step_current(&mut self) -> Option<I::Item> {$/;"	f
stop	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn stop(self) -> RedirectAction {$/;"	f
store	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/confy-0.3.1/src/lib.rs	/^pub fn store<T: Serialize>(name: &str, cfg: T) -> Result<(), IoError> {$/;"	f
stream	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn stream<T>(value: T) -> Part$/;"	f
stream_to_end	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn stream_to_end() {$/;"	f
stream_to_end_with_header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn stream_to_end_with_header() {$/;"	f
string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    pub fn string<T: Into<String>>(&self, input: T) -> Result<()> {$/;"	f
string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/export.rs	/^mod string {$/;"	m
string_with_header	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/builder.rs	/^    pub fn string_with_header<T: Into<String>>(&self, input: T, header: T) -> Result<()> {$/;"	f
struct_from_ast	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/ast.rs	/^fn struct_from_ast<'a>($/;"	f
struct_pattern	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/pretend.rs	/^fn struct_pattern(fields: &[Field]) -> TokenStream {$/;"	f
struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn struct_variant<V>($/;"	f
struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn struct_variant<V>($/;"	f
struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn struct_variant<V>($/;"	f
struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn struct_variant<V>(self, _fields: &'static [&'static str], _visitor: V) -> Result<V::Value>$/;"	f
struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn struct_variant<V>(self, fields: &'static [&'static str], visitor: V) -> Result<V::Value>$/;"	f
struct_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn struct_variant<V>($/;"	f
structs	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^pub mod structs {$/;"	m
sub_scalar	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/size_hint.rs	/^pub fn sub_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
syntax	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/error.rs	/^    pub fn syntax(code: ErrorCode, line: usize, column: usize) -> Self {$/;"	f
syntax_set_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^fn syntax_set_path() -> PathBuf {$/;"	f
tag	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn tag(&self) -> &TagType {$/;"	f
take	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    pub fn take(&mut self) -> Value {$/;"	f
take_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn take_fields(&mut self) -> Vec<(Cow<'static, str>, P)> {$/;"	f
take_while_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn take_while_ref<I, F>(iter: &mut I, f: F) -> TakeWhileRef<I, F>$/;"	f
take_while_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn take_while_ref<F>(&mut self, accept: F) -> TakeWhileRef<Self, F>$/;"	f
tcp_nodelay	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn tcp_nodelay(mut self) -> ClientBuilder {$/;"	f
tcp_nodelay	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn tcp_nodelay(self) -> ClientBuilder {$/;"	f
tee	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn tee(self) -> (Tee<Self>, Tee<Self>)$/;"	f
template	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^    pub fn template(mut self, s: &str) -> ProgressStyle {$/;"	f
term	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    pub fn term(&self) -> &Term {$/;"	f
test_all	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn test_all() {$/;"	f
test_api_key	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^fn test_api_key(api_key: String) -> Result<User, InvalidAPIKey> {$/;"	f
test_cause_chain	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    fn test_cause_chain() {$/;"	f
test_custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn test_custom() {$/;"	f
test_duration_stuff	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^fn test_duration_stuff() {$/;"	f
test_existing_api_key	/home/andre/Projects/rust_projs/pipe_cli/src/pipefy/user.rs	/^pub fn test_existing_api_key(api_key: String) -> User {$/;"	f
test_expand_template	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^fn test_expand_template() {$/;"	f
test_expand_template_flags	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^fn test_expand_template_flags() {$/;"	f
test_from_http_response	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    fn test_from_http_response() {$/;"	f
test_http	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn test_http() {$/;"	f
test_https	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn test_https() {$/;"	f
test_parse_fail	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_parse_fail() {$/;"	f
test_parse_full	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_parse_full() {$/;"	f
test_parse_partial_max	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_parse_partial_max() {$/;"	f
test_parse_partial_min	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_parse_partial_min() {$/;"	f
test_pbar_maxu64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^fn test_pbar_maxu64() {$/;"	f
test_pbar_overflow	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^fn test_pbar_overflow() {$/;"	f
test_pbar_zero	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^fn test_pbar_zero() {$/;"	f
test_ranges_advanced	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_ranges_advanced() {$/;"	f
test_ranges_empty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_ranges_empty() {$/;"	f
test_ranges_open_high	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_ranges_open_high() {$/;"	f
test_ranges_open_low	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_ranges_open_low() {$/;"	f
test_ranges_simple	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/line_range.rs	/^fn test_ranges_simple() {$/;"	f
test_redirect_policy_custom	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^fn test_redirect_policy_custom() {$/;"	f
test_redirect_policy_limit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^fn test_redirect_policy_limit() {$/;"	f
test_ref_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    fn test_ref_str() {$/;"	f
test_remove_sensitive_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^fn test_remove_sensitive_headers() {$/;"	f
test_replace_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    fn test_replace_headers() {$/;"	f
test_replace_headers	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    fn test_replace_headers() {$/;"	f
test_response_builder_ext	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    fn test_response_builder_ext() {$/;"	f
test_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    fn test_str() {$/;"	f
test_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    fn test_string() {$/;"	f
test_tunnel	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn test_tunnel() {$/;"	f
test_tunnel_basic_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn test_tunnel_basic_auth() {$/;"	f
test_tunnel_eof	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn test_tunnel_eof() {$/;"	f
test_tunnel_non_http_response	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn test_tunnel_non_http_response() {$/;"	f
test_tunnel_proxy_unauthorized	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^    fn test_tunnel_proxy_unauthorized() {$/;"	f
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/lib.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/into_url.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^mod tests {$/;"	m
tests	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^mod tests {$/;"	m
text	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn text<T, U>(self, name: T, value: U) -> Form$/;"	f
text	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    pub fn text<T>(value: T) -> Part$/;"	f
text	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn text<T, U>(self, name: T, value: U) -> Form$/;"	f
text	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    pub fn text<T>(value: T) -> Part$/;"	f
text	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn text(&mut self) -> ::Result<String> {$/;"	f
text_with_charset	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn text_with_charset(&mut self, default_encoding: &str) -> ::Result<String> {$/;"	f
theme_set_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/assets.rs	/^fn theme_set_path() -> PathBuf {$/;"	f
tick	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn tick(&self) {$/;"	f
tick_chars	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/style.rs	/^    pub fn tick_chars(mut self, s: &str) -> ProgressStyle {$/;"	f
time_per_step	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/utils.rs	/^    pub fn time_per_step(&self) -> Duration {$/;"	f
timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn timeout(mut self, timeout: Duration) -> ClientBuilder {$/;"	f
timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn timeout<T>(mut self, timeout: T) -> ClientBuilder$/;"	f
timeout	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        macro_rules! timeout {$/;"	d
tm_to_systemtime	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^fn tm_to_systemtime(tm: ::time::Tm) -> SystemTime {$/;"	f
to_ansi_color	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/terminal.rs	/^pub fn to_ansi_color(color: highlighting::Color, true_color: bool) -> ansi_term::Colour {$/;"	f
to_compile_errors	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/lib.rs	/^fn to_compile_errors(errors: Vec<syn::Error>) -> proc_macro2::TokenStream {$/;"	f
to_owned	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn to_owned(&self) -> Self::Owned {$/;"	f
to_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub fn to_string<T: ?Sized>(value: &T) -> Result<String>$/;"	f
to_string_pretty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub fn to_string_pretty<T: ?Sized>(value: &T) -> Result<String>$/;"	f
to_term	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn to_term(term: Term, refresh_rate: Option<u64>) -> ProgressDrawTarget {$/;"	f
to_tokens	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	f
to_tokens	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	f
to_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^pub fn to_value<T>(value: T) -> Result<Value, Error>$/;"	f
to_vec	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub fn to_vec<T: ?Sized>(value: &T) -> Result<Vec<u8>>$/;"	f
to_vec_pretty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub fn to_vec_pretty<T: ?Sized>(value: &T) -> Result<Vec<u8>>$/;"	f
to_writer	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub fn to_writer<W, T: ?Sized>(writer: W, value: &T) -> Result<()>$/;"	f
to_writer_pretty	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^pub fn to_writer_pretty<W, T: ?Sized>(writer: W, value: &T) -> Result<()>$/;"	f
too_many_redirects	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn too_many_redirects(self) -> RedirectAction {$/;"	f
transparent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	f
tree_fold1	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn tree_fold1<F>(mut self, mut f: F) -> Option<Self::Item>$/;"	f
trim_newlines	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/edit.rs	/^    pub fn trim_newlines(&mut self, val: bool) -> &mut Editor {$/;"	f
try	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/try.rs	/^        macro_rules! try {$/;"	d
try	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/lib.rs	/^macro_rules! try {$/;"	d
try_	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^macro_rules! try_ {$/;"	d
try_clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/body.rs	/^    fn try_clone(&self) -> Option<Kind> {$/;"	f
try_clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn try_clone(&self) -> Option<Request> {$/;"	f
try_clone	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn try_clone(&self) -> Option<RequestBuilder> {$/;"	f
try_io	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^macro_rules! try_io {$/;"	d
try_left	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^macro_rules! try_left {$/;"	d
try_pager	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/output.rs	/^    fn try_pager(quit_if_one_screen: bool, pager_from_config: Option<String>) -> Result<Self> {$/;"	f
try_right	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^macro_rules! try_right {$/;"	d
try_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/format.rs	/^        macro_rules! try_unit {$/;"	d
tunnel	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^fn tunnel<T>(conn: T, host: String, port: u16, auth: Option<::http::header::HeaderValue>) -> Tunnel<T> {$/;"	f
tunnel_eof	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^fn tunnel_eof() -> io::Error {$/;"	f
tuple_combinations	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn tuple_combinations<T, I>(iter: I) -> TupleCombinations<I, T>$/;"	f
tuple_combinations	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn tuple_combinations<T>(self) -> TupleCombinations<Self, T>$/;"	f
tuple_impls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_impls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value>$/;"	f
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	f
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	f
tuple_windows	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn tuple_windows<T>(self) -> TupleWindows<Self, T>$/;"	f
tuple_windows	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^pub fn tuple_windows<I, T>(mut iter: I) -> TupleWindows<I, T>$/;"	f
tuples	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn tuples<T>(self) -> Tuples<Self, T>$/;"	f
tuples	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/tuple_impl.rs	/^pub fn tuples<I, T>(iter: I) -> Tuples<I, T>$/;"	f
type_from	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn type_from(&self) -> Option<&syn::Type> {$/;"	f
type_into	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^    pub fn type_into(&self) -> Option<&syn::Type> {$/;"	f
type_name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^    fn type_name(&self) -> String {$/;"	f
type_name	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^    fn type_name(&self) -> String {$/;"	f
type_of_item	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^fn type_of_item(cont: &Container) -> syn::Type {$/;"	f
uint_to	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/from_primitive.rs	/^macro_rules! uint_to {$/;"	d
unexpected	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	f
unexpected	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^    pub fn unexpected(&self) -> Unexpected {$/;"	f
unexpected	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn unexpected(&self) -> Unexpected {$/;"	f
unfold	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/sources.rs	/^pub fn unfold<A, St, F>(initial_state: St, f: F) -> Unfold<St, F>$/;"	f
unique	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn unique(self) -> Unique<Self>$/;"	f
unique	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^pub fn unique<I>(iter: I) -> Unique<I>$/;"	f
unique_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn unique_by<V, F>(self, f: F) -> UniqueBy<Self, V, F>$/;"	f
unique_by	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/unique_impl.rs	/^pub fn unique_by<I, V, F>(iter: I, f: F) -> UniqueBy<I, V, F>$/;"	f
unit_only	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f
unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	f
unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f
unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	f
unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	f
unit_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f
unix	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    pub fn unix<P: AsRef<Path>(path: P) -> Proxy {$/;"	f
unknown_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn unknown_field(field: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unknown_variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^            fn unknown_variant(variant: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unraw	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/dummy.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unraw	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/internals/attr.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
update	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn update<I, F>(iter: I, f: F) -> Update<I, F>$/;"	f
update	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn update<F>(self, updater: F) -> Update<Self, F>$/;"	f
update_and_draw	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    fn update_and_draw<F: FnOnce(&mut ProgressState)>(&self, f: F) {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn url(&self) -> &Url {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    fn url(&mut self, url: Url) -> &mut Self {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    fn url(&mut self, url: Url) -> &mut Self;$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn url(&self) -> &Url {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/error.rs	/^    pub fn url(&self) -> Option<&Url> {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn url(s: &str) -> Url {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/redirect.rs	/^    pub fn url(&self) -> &Url {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn url(&self) -> &Url {$/;"	f
url	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn url(&self) -> &Url {$/;"	f
url_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/request.rs	/^    pub fn url_mut(&mut self) -> &mut Url {$/;"	f
url_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/request.rs	/^    pub fn url_mut(&mut self) -> &mut Url {$/;"	f
use_default_tls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn use_default_tls(mut self) -> ClientBuilder {$/;"	f
use_default_tls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn use_default_tls(self) -> ClientBuilder {$/;"	f
use_rustls_tls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/client.rs	/^    pub fn use_rustls_tls(mut self) -> ClientBuilder {$/;"	f
use_rustls_tls	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    pub fn use_rustls_tls(self) -> ClientBuilder {$/;"	f
utf16le	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/inputfile.rs	/^fn utf16le() {$/;"	f
validate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/validate.rs	/^    fn validate(&self, text: &str) -> Result<(), Self::Err> {$/;"	f
validate	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/validate.rs	/^    fn validate(&self, text: &str) -> Result<(), Self::Err>;$/;"	f
validate_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn validate_with<V: Validator + 'static>(&mut self, validator: V) -> &mut Input<'a, T> {$/;"	f
value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/cookie.rs	/^    pub fn value(&self) -> &str {$/;"	f
value_len	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn value_len(&self) -> Option<u64> {$/;"	f
value_len	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn value_len(&self) -> Option<u64>;$/;"	f
value_len	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn value_len(&self) -> Option<u64> {$/;"	f
values	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn values(&self) -> Values {$/;"	f
values_mut	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut {$/;"	f
variant	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	f
variant_identifier	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	d
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self)>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Error>$/;"	f
variant_seed	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, VariantDeserializer), Error>$/;"	f
verify_server_cert	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/tls.rs	/^    fn verify_server_cert($/;"	f
version	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/response.rs	/^    pub fn version(&self) -> Version {$/;"	f
version	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/response.rs	/^    pub fn version(&self) -> Version {$/;"	f
visit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/de.rs	/^    fn visit<'de, V>(self, visitor: V) -> Result<V::Value>$/;"	f
visit_array	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^fn visit_array<'de, V>(array: Vec<Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_array_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^fn visit_array_ref<'de, V>(array: &'de [Value], visitor: V) -> Result<V::Value, Error>$/;"	f
visit_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	f
visit_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	f
visit_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_bool<__E>(self, __value: bool) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_bool<E>(self, value: bool) -> Result<Value, E> {$/;"	f
visit_borrowed_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	f
visit_borrowed_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_borrowed_bytes<__E>(self, __value: &'de [u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	f
visit_borrowed_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_borrowed_str<__E>(self, __value: &'de str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn visit_borrowed_str<E>(self, s: &'de str) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	f
visit_bytes	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        fn visit_bytes<__E>(self, __value: &[u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	f
visit_char	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_char<__E>(self, __value: char) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_content_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f
visit_content_map_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f
visit_content_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, E>$/;"	f
visit_content_seq_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f
visit_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_enum<__A>(self, __data: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	f
visit_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	f
visit_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_f32<__E>(self, __value: f32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	f
visit_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	f
visit_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	f
visit_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_f64<__E>(self, __value: f64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Number, E>$/;"	f
visit_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Value, E> {$/;"	f
visit_field	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^        fn visit_field(&mut self, field: &'ast syn::Field) {$/;"	f
visit_float_method	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! visit_float_method {$/;"	d
visit_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^        fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	f
visit_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	f
visit_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_i16<__E>(self, __value: i16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	f
visit_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	f
visit_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_i32<__E>(self, __value: i32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	f
visit_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	f
visit_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	f
visit_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_i64<__E>(self, __value: i64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Number, E> {$/;"	f
visit_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Value, E> {$/;"	f
visit_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	f
visit_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	f
visit_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_i8<__E>(self, __value: i8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_integer_method	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^macro_rules! visit_integer_method {$/;"	d
visit_macro	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^        fn visit_macro(&mut self, _mac: &'ast syn::Macro) {}$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    fn visit_map<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_map<__A>(self, mut __map: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Number, V::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	f
visit_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        fn visit_newtype_struct<__E>(self, __e: __E) -> _serde::export::Result<Self::Value, __E::Error>$/;"	f
visit_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	f
visit_none	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_none<E>(self) -> Result<Value, E> {$/;"	f
visit_object	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^fn visit_object<'de, V>(object: Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_object_ref	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^fn visit_object_ref<'de, V>(object: &'de Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_path	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^        fn visit_path(&mut self, path: &'ast syn::Path) {$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    fn visit_seq<A>(mut self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    fn visit_seq<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_seq<__A>(self, mut __seq: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_seq<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	f
visit_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_some<D>(self, deserializer: D) -> Result<Value, D::Error>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                        fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^        fn visit_str<__E>(self, __value: &str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<NumberFromString, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_str<E>(self, value: &str) -> Result<Value, E>$/;"	f
visit_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	f
visit_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/raw.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	f
visit_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_string<E>(self, value: String) -> Result<Value, E> {$/;"	f
visit_string	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	f
visit_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u128	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^        fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	f
visit_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	f
visit_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_u16<__E>(self, __value: u16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^                    fn visit_u32<E>(self, value: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	f
visit_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_u32<__E>(self, __value: u32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	f
visit_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	f
visit_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	f
visit_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_u64<__E>(self, __value: u64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/number.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Number, E> {$/;"	f
visit_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Value, E> {$/;"	f
visit_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	f
visit_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	f
visit_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_u8<__E>(self, __value: u8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.92/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^            fn visit_unit<__E>(self) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^            fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/de.rs	/^            fn visit_unit<E>(self) -> Result<Value, E> {$/;"	f
welcome	/home/andre/Projects/rust_projs/pipe_cli/src/main.rs	/^fn welcome() -> () {$/;"	f
while_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^pub fn while_some<I>(iter: I) -> WhileSome<I> {$/;"	f
while_some	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn while_some<A>(self) -> WhileSome<Self>$/;"	f
width	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn width(&self) -> usize {$/;"	f
width	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^    fn width(&self) -> usize {$/;"	f
width	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/prettyprint-0.7.0/src/decorations.rs	/^    fn width(&self) -> usize;$/;"	f
with_basic_auth	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/proxy.rs	/^    fn with_basic_auth<T: Into<String>, U: Into<String>>(mut self, username: T, password: U) -> Self {$/;"	f
with_bound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^pub fn with_bound($/;"	f
with_capacity	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> Self {$/;"	f
with_confirmation	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn with_confirmation($/;"	f
with_draw_target	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn with_draw_target(len: u64, target: ProgressDrawTarget) -> ProgressBar {$/;"	f
with_formatter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    pub fn with_formatter(writer: W, formatter: F) -> Self {$/;"	f
with_indent	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    pub fn with_indent(indent: &'a [u8]) -> Self {$/;"	f
with_inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/async_impl/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	f
with_inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/client.rs	/^    fn with_inner<F>(mut self, func: F) -> ClientBuilder$/;"	f
with_inner	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	f
with_lifetime_bound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^pub fn with_lifetime_bound(generics: &syn::Generics, lifetime: &str) -> syn::Generics {$/;"	f
with_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn with_position(self) -> WithPosition<Self>$/;"	f
with_position	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/with_position.rs	/^pub fn with_position<I>(iter: I) -> WithPosition<I>$/;"	f
with_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn with_prompt(&mut self, prompt: &str) -> &mut Input<'a, T> {$/;"	f
with_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn with_prompt(&mut self, prompt: &str) -> &mut PasswordInput<'a> {$/;"	f
with_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn with_prompt(&mut self, prompt: &str) -> &mut Checkboxes<'a> {$/;"	f
with_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn with_prompt(&mut self, prompt: &str) -> &mut Select<'a> {$/;"	f
with_self_bound	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^pub fn with_self_bound($/;"	f
with_text	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn with_text(&mut self, text: &str) -> &mut Confirmation<'a> {$/;"	f
with_theme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn with_theme(theme: &'a Theme) -> Confirmation<'a> {$/;"	f
with_theme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn with_theme(theme: &'a Theme) -> Input<'a, T> {$/;"	f
with_theme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/prompts.rs	/^    pub fn with_theme(theme: &'a Theme) -> PasswordInput<'a> {$/;"	f
with_theme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn with_theme(theme: &'a Theme) -> Checkboxes<'a> {$/;"	f
with_theme	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/select.rs	/^    pub fn with_theme(theme: &'a Theme) -> Select<'a> {$/;"	f
with_value	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/adaptors/mod.rs	/^    pub fn with_value(mut self, value: I::Item) -> Self {$/;"	f
with_where_predicates	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^pub fn with_where_predicates($/;"	f
with_where_predicates_from_fields	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^pub fn with_where_predicates_from_fields($/;"	f
with_where_predicates_from_variants	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^pub fn with_where_predicates_from_variants($/;"	f
without_defaults	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/bound.rs	/^pub fn without_defaults(generics: &syn::Generics) -> syn::Generics {$/;"	f
wrap_deserialize_field_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn wrap_deserialize_field_with($/;"	f
wrap_deserialize_variant_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn wrap_deserialize_variant_with($/;"	f
wrap_deserialize_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/de.rs	/^fn wrap_deserialize_with($/;"	f
wrap_in_const	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/dummy.rs	/^pub fn wrap_in_const($/;"	f
wrap_iter	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn wrap_iter<It: Iterator>(&self, it: It) -> ProgressBarIter<It> {$/;"	f
wrap_read	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.11.0/src/progress.rs	/^    pub fn wrap_read<R: io::Read>(&self, read: R) -> ProgressBarRead<R> {$/;"	f
wrap_serialize_field_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn wrap_serialize_field_with($/;"	f
wrap_serialize_variant_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn wrap_serialize_variant_with($/;"	f
wrap_serialize_with	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.92/src/ser.rs	/^fn wrap_serialize_with($/;"	f
write	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.2/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.9.17/src/connect.rs	/^        fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/value/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_bool	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_bool<W: ?Sized>(&mut self, writer: &mut W, value: bool) -> io::Result<()>$/;"	f
write_char_escape	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_char_escape<W: ?Sized>($/;"	f
write_f32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_f32<W: ?Sized>(&mut self, writer: &mut W, value: f32) -> io::Result<()>$/;"	f
write_f64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_f64<W: ?Sized>(&mut self, writer: &mut W, value: f64) -> io::Result<()>$/;"	f
write_formatted_line	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn write_formatted_line<F: FnOnce(&mut TermThemeRenderer, &mut fmt::Write) -> fmt::Result>($/;"	f
write_formatted_prompt	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn write_formatted_prompt<F: FnOnce(&mut TermThemeRenderer, &mut fmt::Write) -> fmt::Result>($/;"	f
write_formatted_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/dialoguer-0.4.0/src/theme.rs	/^    fn write_formatted_str<F: FnOnce(&mut TermThemeRenderer, &mut fmt::Write) -> fmt::Result>($/;"	f
write_i16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_i16<W: ?Sized>(&mut self, writer: &mut W, value: i16) -> io::Result<()>$/;"	f
write_i32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_i32<W: ?Sized>(&mut self, writer: &mut W, value: i32) -> io::Result<()>$/;"	f
write_i64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_i64<W: ?Sized>(&mut self, writer: &mut W, value: i64) -> io::Result<()>$/;"	f
write_i8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_i8<W: ?Sized>(&mut self, writer: &mut W, value: i8) -> io::Result<()>$/;"	f
write_null	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_null<W: ?Sized>(&mut self, writer: &mut W) -> io::Result<()>$/;"	f
write_number_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_number_str<W: ?Sized>(&mut self, writer: &mut W, value: &str) -> io::Result<()>$/;"	f
write_raw_fragment	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_raw_fragment<W: ?Sized>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	f
write_str	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^            fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_string_fragment	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_string_fragment<W: ?Sized>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	f
write_to_file	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/quicli-0.4.0/src/fs.rs	/^pub fn write_to_file<P: AsRef<Path>>(path: P, content: &str) -> Result<(), Error> {$/;"	f
write_u16	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_u16<W: ?Sized>(&mut self, writer: &mut W, value: u16) -> io::Result<()>$/;"	f
write_u32	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_u32<W: ?Sized>(&mut self, writer: &mut W, value: u32) -> io::Result<()>$/;"	f
write_u64	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_u64<W: ?Sized>(&mut self, writer: &mut W, value: u64) -> io::Result<()>$/;"	f
write_u8	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.39/src/ser.rs	/^    fn write_u8<W: ?Sized>(&mut self, writer: &mut W, value: u8) -> io::Result<()>$/;"	f
zip	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/free.rs	/^pub fn zip<I, J>(i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>$/;"	f
zip_eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn zip_eq<J>(self, other: J) -> ZipEq<Self, J::IntoIter>$/;"	f
zip_eq	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_eq_impl.rs	/^pub fn zip_eq<I, J>(i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>$/;"	f
zip_longest	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/lib.rs	/^    fn zip_longest<J>(self, other: J) -> ZipLongest<Self, J::IntoIter>$/;"	f
zip_longest	/home/andre/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.0/src/zip_longest.rs	/^pub fn zip_longest<T, U>(a: T, b: U) -> ZipLongest<T, U> $/;"	f
